2025-04-19 00:00:35 [http-nio-9090-exec-3] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories
2025-04-19 00:00:35 [http-nio-9090-exec-3] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer 1|1744991873157
2025-04-19 00:00:35 [http-nio-9090-exec-3] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: 1|1744991873157
2025-04-19 00:00:35 [http-nio-9090-exec-3] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:00:35 [http-nio-9090-exec-3] ERROR com.bupt.backend.service.JwtService - 解析 token 时发生错误
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:00:35 [http-nio-9090-exec-3] ERROR c.b.b.config.JwtAuthenticationFilter - 处理 JWT token 时发生错误
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:00:35 [http-nio-9090-exec-3] ERROR o.a.c.c.C.[.[.[.[dispatcherServlet] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed: java.lang.NullPointerException: Cannot invoke "org.springframework.security.core.Authentication.getPrincipal()" because "authentication" is null] with root cause
java.lang.NullPointerException: Cannot invoke "org.springframework.security.core.Authentication.getPrincipal()" because "authentication" is null
	at com.bupt.backend.controller.CategoryController.getUserCategories(CategoryController.java:43)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:83)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:01:58 [http-nio-9090-exec-4] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 00:01:58 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer 1|1744991873157
2025-04-19 00:01:58 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: 1|1744991873157
2025-04-19 00:01:58 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:01:58 [http-nio-9090-exec-4] ERROR com.bupt.backend.service.JwtService - 解析 token 时发生错误
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:01:58 [http-nio-9090-exec-4] ERROR c.b.b.config.JwtAuthenticationFilter - 处理 JWT token 时发生错误
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:01:59 [http-nio-9090-exec-4] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'categoryId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "all"]
2025-04-19 00:04:22 [http-nio-9090-exec-5] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 00:04:22 [http-nio-9090-exec-5] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer 1|1744991873157
2025-04-19 00:04:22 [http-nio-9090-exec-5] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: 1|1744991873157
2025-04-19 00:04:22 [http-nio-9090-exec-5] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:04:22 [http-nio-9090-exec-5] ERROR com.bupt.backend.service.JwtService - 解析 token 时发生错误
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:04:22 [http-nio-9090-exec-5] ERROR c.b.b.config.JwtAuthenticationFilter - 处理 JWT token 时发生错误
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:04:22 [http-nio-9090-exec-5] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'categoryId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "all"]
2025-04-19 00:04:24 [http-nio-9090-exec-6] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 00:04:24 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer 1|1744991873157
2025-04-19 00:04:24 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: 1|1744991873157
2025-04-19 00:04:24 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:04:24 [http-nio-9090-exec-6] ERROR com.bupt.backend.service.JwtService - 解析 token 时发生错误
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:04:24 [http-nio-9090-exec-6] ERROR c.b.b.config.JwtAuthenticationFilter - 处理 JWT token 时发生错误
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:04:24 [http-nio-9090-exec-6] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'categoryId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "all"]
2025-04-19 00:05:05 [http-nio-9090-exec-7] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 00:05:05 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer 1|1744991873157
2025-04-19 00:05:05 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: 1|1744991873157
2025-04-19 00:05:05 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:05:05 [http-nio-9090-exec-7] ERROR com.bupt.backend.service.JwtService - 解析 token 时发生错误
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:05:05 [http-nio-9090-exec-7] ERROR c.b.b.config.JwtAuthenticationFilter - 处理 JWT token 时发生错误
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:05:05 [http-nio-9090-exec-7] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'categoryId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "all"]
2025-04-19 00:05:49 [http-nio-9090-exec-8] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 00:05:49 [http-nio-9090-exec-8] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer 1|1744991873157
2025-04-19 00:05:49 [http-nio-9090-exec-8] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: 1|1744991873157
2025-04-19 00:05:49 [http-nio-9090-exec-8] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:05:49 [http-nio-9090-exec-8] ERROR com.bupt.backend.service.JwtService - 解析 token 时发生错误
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:05:49 [http-nio-9090-exec-8] ERROR c.b.b.config.JwtAuthenticationFilter - 处理 JWT token 时发生错误
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:05:49 [http-nio-9090-exec-8] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'categoryId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "all"]
2025-04-19 00:12:55 [http-nio-9090-exec-9] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 00:12:55 [http-nio-9090-exec-9] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer 1|1744991873157
2025-04-19 00:12:55 [http-nio-9090-exec-9] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: 1|1744991873157
2025-04-19 00:12:55 [http-nio-9090-exec-9] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:12:55 [http-nio-9090-exec-9] ERROR com.bupt.backend.service.JwtService - 解析 token 时发生错误
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:12:55 [http-nio-9090-exec-9] ERROR c.b.b.config.JwtAuthenticationFilter - 处理 JWT token 时发生错误
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:12:55 [http-nio-9090-exec-9] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'categoryId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "all"]
2025-04-19 00:14:38 [http-nio-9090-exec-10] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 00:14:38 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer 1|1744991873157
2025-04-19 00:14:38 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: 1|1744991873157
2025-04-19 00:14:38 [http-nio-9090-exec-10] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:14:38 [http-nio-9090-exec-10] ERROR com.bupt.backend.service.JwtService - 解析 token 时发生错误
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:14:38 [http-nio-9090-exec-10] ERROR c.b.b.config.JwtAuthenticationFilter - 处理 JWT token 时发生错误
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:14:38 [http-nio-9090-exec-10] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'categoryId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "all"]
2025-04-19 00:14:40 [http-nio-9090-exec-1] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 00:14:40 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer 1|1744991873157
2025-04-19 00:14:40 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: 1|1744991873157
2025-04-19 00:14:40 [http-nio-9090-exec-1] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:14:40 [http-nio-9090-exec-1] ERROR com.bupt.backend.service.JwtService - 解析 token 时发生错误
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:14:40 [http-nio-9090-exec-1] ERROR c.b.b.config.JwtAuthenticationFilter - 处理 JWT token 时发生错误
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:14:40 [http-nio-9090-exec-1] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'categoryId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "all"]
2025-04-19 00:14:54 [http-nio-9090-exec-2] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 00:14:54 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer 1|1744991873157
2025-04-19 00:14:54 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: 1|1744991873157
2025-04-19 00:14:54 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:14:54 [http-nio-9090-exec-2] ERROR com.bupt.backend.service.JwtService - 解析 token 时发生错误
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:14:54 [http-nio-9090-exec-2] ERROR c.b.b.config.JwtAuthenticationFilter - 处理 JWT token 时发生错误
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:14:54 [http-nio-9090-exec-2] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'categoryId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "all"]
2025-04-19 00:18:23 [http-nio-9090-exec-3] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 00:18:23 [http-nio-9090-exec-3] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer 1|1744991873157
2025-04-19 00:18:23 [http-nio-9090-exec-3] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: 1|1744991873157
2025-04-19 00:18:23 [http-nio-9090-exec-3] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:18:23 [http-nio-9090-exec-3] ERROR com.bupt.backend.service.JwtService - 解析 token 时发生错误
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:18:23 [http-nio-9090-exec-3] ERROR c.b.b.config.JwtAuthenticationFilter - 处理 JWT token 时发生错误
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:18:23 [http-nio-9090-exec-3] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'categoryId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "all"]
2025-04-19 00:18:28 [http-nio-9090-exec-4] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 00:18:28 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer 1|1744991873157
2025-04-19 00:18:28 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: 1|1744991873157
2025-04-19 00:18:28 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:18:28 [http-nio-9090-exec-4] ERROR com.bupt.backend.service.JwtService - 解析 token 时发生错误
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:18:28 [http-nio-9090-exec-4] ERROR c.b.b.config.JwtAuthenticationFilter - 处理 JWT token 时发生错误
io.jsonwebtoken.MalformedJwtException: JWT strings must contain exactly 2 period characters. Found: 0
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:275)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:18:28 [http-nio-9090-exec-4] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'categoryId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "all"]
2025-04-19 00:26:21 [http-nio-9090-exec-5] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/auth/login
2025-04-19 00:26:21 [http-nio-9090-exec-5] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: null
2025-04-19 00:26:21 [http-nio-9090-exec-5] WARN  c.b.b.config.JwtAuthenticationFilter - 未找到有效的 Authorization header
2025-04-19 00:26:22 [http-nio-9090-exec-5] DEBUG c.b.b.mapper.UserMapper.selectList - ==>  Preparing: SELECT userid,username,password,email,avatar,bio,post_count,like_count,view_count,create_at,last_login FROM users WHERE (username = ?)
2025-04-19 00:26:22 [http-nio-9090-exec-5] DEBUG c.b.b.mapper.UserMapper.selectList - ==> Parameters: demo(String)
2025-04-19 00:26:22 [http-nio-9090-exec-5] DEBUG c.b.b.mapper.UserMapper.selectList - <==      Total: 1
2025-04-19 00:26:22 [http-nio-9090-exec-5] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 00:26:22 [http-nio-9090-exec-5] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 00:26:22 [http-nio-9090-exec-5] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 00:26:22 [http-nio-9090-exec-5] INFO  com.bupt.backend.service.JwtService - 为用户 demo 生成 token
2025-04-19 00:26:22 [http-nio-9090-exec-5] DEBUG com.bupt.backend.service.JwtService - 生成的 token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTkzNTgyLCJleHAiOjE3NDUwNzk5ODJ9.gj-e_cqS7UMeO8YheXaD1YMmG4JD5wBPB1Y8VpzcM2k
2025-04-19 00:26:28 [http-nio-9090-exec-6] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 00:26:28 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTkzNTgyLCJleHAiOjE3NDUwNzk5ODJ9.gj-e_cqS7UMeO8YheXaD1YMmG4JD5wBPB1Y8VpzcM2k
2025-04-19 00:26:28 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTkzNTgyLCJleHAiOjE3NDUwNzk5ODJ9.gj-e_cqS7UMeO8YheXaD1YMmG4JD5wBPB1Y8VpzcM2k
2025-04-19 00:26:28 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:26:28 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 00:26:28 [http-nio-9090-exec-6] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 00:26:28 [http-nio-9090-exec-6] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 00:26:28 [http-nio-9090-exec-6] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 00:26:28 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@7a565b59
2025-04-19 00:26:28 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:26:28 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 00:26:28 [http-nio-9090-exec-6] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 00:26:28 [http-nio-9090-exec-6] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'categoryId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "all"]
2025-04-19 00:27:18 [http-nio-9090-exec-7] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 00:27:18 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTkzNTgyLCJleHAiOjE3NDUwNzk5ODJ9.gj-e_cqS7UMeO8YheXaD1YMmG4JD5wBPB1Y8VpzcM2k
2025-04-19 00:27:18 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTkzNTgyLCJleHAiOjE3NDUwNzk5ODJ9.gj-e_cqS7UMeO8YheXaD1YMmG4JD5wBPB1Y8VpzcM2k
2025-04-19 00:27:18 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:27:18 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 00:27:18 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 00:27:18 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 00:27:18 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 00:27:18 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@1b725b8e
2025-04-19 00:27:18 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:27:18 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 00:27:18 [http-nio-9090-exec-7] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 00:27:18 [http-nio-9090-exec-7] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'categoryId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "all"]
2025-04-19 00:30:48 [http-nio-9090-exec-8] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /
2025-04-19 00:30:48 [http-nio-9090-exec-8] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: null
2025-04-19 00:30:48 [http-nio-9090-exec-8] WARN  c.b.b.config.JwtAuthenticationFilter - 未找到有效的 Authorization header
2025-04-19 00:30:50 [http-nio-9090-exec-1] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /
2025-04-19 00:30:50 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: null
2025-04-19 00:30:50 [http-nio-9090-exec-1] WARN  c.b.b.config.JwtAuthenticationFilter - 未找到有效的 Authorization header
2025-04-19 00:30:50 [http-nio-9090-exec-2] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /
2025-04-19 00:30:50 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: null
2025-04-19 00:30:50 [http-nio-9090-exec-2] WARN  c.b.b.config.JwtAuthenticationFilter - 未找到有效的 Authorization header
2025-04-19 00:30:50 [http-nio-9090-exec-3] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /
2025-04-19 00:30:50 [http-nio-9090-exec-3] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: null
2025-04-19 00:30:50 [http-nio-9090-exec-3] WARN  c.b.b.config.JwtAuthenticationFilter - 未找到有效的 Authorization header
2025-04-19 00:30:51 [http-nio-9090-exec-4] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /
2025-04-19 00:30:51 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: null
2025-04-19 00:30:51 [http-nio-9090-exec-4] WARN  c.b.b.config.JwtAuthenticationFilter - 未找到有效的 Authorization header
2025-04-19 00:30:51 [http-nio-9090-exec-5] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /
2025-04-19 00:30:51 [http-nio-9090-exec-5] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: null
2025-04-19 00:30:51 [http-nio-9090-exec-5] WARN  c.b.b.config.JwtAuthenticationFilter - 未找到有效的 Authorization header
2025-04-19 00:30:51 [http-nio-9090-exec-6] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /
2025-04-19 00:30:51 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: null
2025-04-19 00:30:51 [http-nio-9090-exec-6] WARN  c.b.b.config.JwtAuthenticationFilter - 未找到有效的 Authorization header
2025-04-19 00:32:39 [http-nio-9090-exec-9] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/test
2025-04-19 00:32:39 [http-nio-9090-exec-9] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: null
2025-04-19 00:32:39 [http-nio-9090-exec-9] WARN  c.b.b.config.JwtAuthenticationFilter - 未找到有效的 Authorization header
2025-04-19 00:32:39 [http-nio-9090-exec-10] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /favicon.ico
2025-04-19 00:32:39 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: null
2025-04-19 00:32:39 [http-nio-9090-exec-10] WARN  c.b.b.config.JwtAuthenticationFilter - 未找到有效的 Authorization header
2025-04-19 00:32:50 [http-nio-9090-exec-3] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 00:32:50 [http-nio-9090-exec-3] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTkzNTgyLCJleHAiOjE3NDUwNzk5ODJ9.gj-e_cqS7UMeO8YheXaD1YMmG4JD5wBPB1Y8VpzcM2k
2025-04-19 00:32:50 [http-nio-9090-exec-3] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTkzNTgyLCJleHAiOjE3NDUwNzk5ODJ9.gj-e_cqS7UMeO8YheXaD1YMmG4JD5wBPB1Y8VpzcM2k
2025-04-19 00:32:50 [http-nio-9090-exec-3] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:32:50 [http-nio-9090-exec-3] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 00:32:50 [http-nio-9090-exec-3] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 00:32:50 [http-nio-9090-exec-3] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 00:32:50 [http-nio-9090-exec-3] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 00:32:50 [http-nio-9090-exec-3] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@72f0f07e
2025-04-19 00:32:50 [http-nio-9090-exec-3] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:32:50 [http-nio-9090-exec-3] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 00:32:50 [http-nio-9090-exec-3] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 00:32:50 [http-nio-9090-exec-3] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'categoryId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "all"]
2025-04-19 00:33:00 [http-nio-9090-exec-4] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 00:33:00 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTkzNTgyLCJleHAiOjE3NDUwNzk5ODJ9.gj-e_cqS7UMeO8YheXaD1YMmG4JD5wBPB1Y8VpzcM2k
2025-04-19 00:33:00 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTkzNTgyLCJleHAiOjE3NDUwNzk5ODJ9.gj-e_cqS7UMeO8YheXaD1YMmG4JD5wBPB1Y8VpzcM2k
2025-04-19 00:33:00 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:33:00 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 00:33:00 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 00:33:00 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 00:33:00 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 00:33:00 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@51f46571
2025-04-19 00:33:00 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:33:00 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 00:33:00 [http-nio-9090-exec-4] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 00:33:00 [http-nio-9090-exec-4] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'categoryId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "all"]
2025-04-19 00:34:10 [http-nio-9090-exec-6] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 00:34:10 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTkzNTgyLCJleHAiOjE3NDUwNzk5ODJ9.gj-e_cqS7UMeO8YheXaD1YMmG4JD5wBPB1Y8VpzcM2k
2025-04-19 00:34:10 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTkzNTgyLCJleHAiOjE3NDUwNzk5ODJ9.gj-e_cqS7UMeO8YheXaD1YMmG4JD5wBPB1Y8VpzcM2k
2025-04-19 00:34:10 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:34:10 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 00:34:10 [http-nio-9090-exec-6] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 00:34:10 [http-nio-9090-exec-6] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 00:34:10 [http-nio-9090-exec-6] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 00:34:10 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@6db27db5
2025-04-19 00:34:10 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:34:10 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 00:34:10 [http-nio-9090-exec-6] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 00:34:10 [http-nio-9090-exec-6] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.method.annotation.MethodArgumentTypeMismatchException: Method parameter 'categoryId': Failed to convert value of type 'java.lang.String' to required type 'java.lang.Integer'; For input string: "all"]
2025-04-19 00:34:40 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-04-19 00:34:40 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-04-19 00:34:40 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-19 00:34:40 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-19 00:34:40 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-19 00:34:44 [main] INFO  com.bupt.backend.BackendApplication - Starting BackendApplication using Java 21.0.6 with PID 17088 (/Users/apple/Desktop/MyProgram/myblog/backend/target/classes started by apple in /Users/apple/Desktop/MyProgram/myblog)
2025-04-19 00:34:44 [main] DEBUG com.bupt.backend.BackendApplication - Running with Spring Boot v3.4.4, Spring v6.2.5
2025-04-19 00:34:44 [main] INFO  com.bupt.backend.BackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-19 00:34:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-19 00:34:45 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 7 ms. Found 0 JPA repository interfaces.
2025-04-19 00:34:45 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-04-19 00:34:45 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-19 00:34:45 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-04-19 00:34:45 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-19 00:34:45 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 675 ms
2025-04-19 00:34:45 [main] DEBUG c.b.b.config.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-04-19 00:34:45 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-19 00:34:45 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@60928a61
2025-04-19 00:34:45 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-19 00:34:45 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-19 00:34:45 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-04-19 00:34:45 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-19 00:34:46 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-19 00:34:46 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.2
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-04-19 00:34:46 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-19 00:34:46 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-19 00:34:46 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-19 00:34:46 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-04-19 00:34:46 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-04-19 00:34:46 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-04-19 00:34:46 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-04-19 00:34:46 [main] INFO  com.bupt.backend.BackendApplication - Started BackendApplication in 2.048 seconds (process running for 2.666)
2025-04-19 00:35:11 [http-nio-9090-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-19 00:35:11 [http-nio-9090-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-19 00:35:11 [http-nio-9090-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-04-19 00:35:11 [http-nio-9090-exec-2] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/auth/login
2025-04-19 00:35:11 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: null
2025-04-19 00:35:11 [http-nio-9090-exec-2] WARN  c.b.b.config.JwtAuthenticationFilter - 未找到有效的 Authorization header
2025-04-19 00:35:11 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.UserMapper.selectList - ==>  Preparing: SELECT userid,username,password,email,avatar,bio,post_count,like_count,view_count,create_at,last_login FROM users WHERE (username = ?)
2025-04-19 00:35:11 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.UserMapper.selectList - ==> Parameters: demo(String)
2025-04-19 00:35:11 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.UserMapper.selectList - <==      Total: 1
2025-04-19 00:35:11 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 00:35:11 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 00:35:11 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 00:35:11 [http-nio-9090-exec-2] INFO  com.bupt.backend.service.JwtService - 为用户 demo 生成 token
2025-04-19 00:35:11 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 生成的 token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 00:36:27 [http-nio-9090-exec-4] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 00:36:27 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 00:36:27 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 00:36:27 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:36:27 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 00:36:27 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 00:36:27 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 00:36:27 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 00:36:27 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@1d24481a
2025-04-19 00:36:27 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:36:27 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 00:36:27 [http-nio-9090-exec-4] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 00:36:27 [http-nio-9090-exec-4] DEBUG c.b.b.m.CategoryMapper.selectList - ==>  Preparing: SELECT category_id,user_id,name,description,post_count,create_at,update_at FROM categories
2025-04-19 00:36:27 [http-nio-9090-exec-4] DEBUG c.b.b.m.CategoryMapper.selectList - ==> Parameters: 
2025-04-19 00:36:27 [http-nio-9090-exec-4] DEBUG c.b.b.m.CategoryMapper.selectList - <==      Total: 0
2025-04-19 00:36:50 [http-nio-9090-exec-6] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts/cover
2025-04-19 00:36:50 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 00:36:50 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 00:36:50 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:36:50 [http-nio-9090-exec-6] ERROR com.bupt.backend.service.JwtService - 解析 token 时发生错误
io.jsonwebtoken.io.DecodingException: Illegal base64url character: ' '
	at io.jsonwebtoken.io.Base64.ctoi(Base64.java:221)
	at io.jsonwebtoken.io.Base64.decodeFast(Base64.java:270)
	at io.jsonwebtoken.io.Base64Decoder.decode(Base64Decoder.java:36)
	at io.jsonwebtoken.io.Base64Decoder.decode(Base64Decoder.java:23)
	at io.jsonwebtoken.io.ExceptionPropagatingDecoder.decode(ExceptionPropagatingDecoder.java:36)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:288)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:36:50 [http-nio-9090-exec-6] ERROR c.b.b.config.JwtAuthenticationFilter - 处理 JWT token 时发生错误
io.jsonwebtoken.io.DecodingException: Illegal base64url character: ' '
	at io.jsonwebtoken.io.Base64.ctoi(Base64.java:221)
	at io.jsonwebtoken.io.Base64.decodeFast(Base64.java:270)
	at io.jsonwebtoken.io.Base64Decoder.decode(Base64Decoder.java:36)
	at io.jsonwebtoken.io.Base64Decoder.decode(Base64Decoder.java:23)
	at io.jsonwebtoken.io.ExceptionPropagatingDecoder.decode(ExceptionPropagatingDecoder.java:36)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:288)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:46:55 [http-nio-9090-exec-7] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts/cover
2025-04-19 00:46:55 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 00:46:55 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 00:46:55 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:46:55 [http-nio-9090-exec-7] ERROR com.bupt.backend.service.JwtService - 解析 token 时发生错误
io.jsonwebtoken.io.DecodingException: Illegal base64url character: ' '
	at io.jsonwebtoken.io.Base64.ctoi(Base64.java:221)
	at io.jsonwebtoken.io.Base64.decodeFast(Base64.java:270)
	at io.jsonwebtoken.io.Base64Decoder.decode(Base64Decoder.java:36)
	at io.jsonwebtoken.io.Base64Decoder.decode(Base64Decoder.java:23)
	at io.jsonwebtoken.io.ExceptionPropagatingDecoder.decode(ExceptionPropagatingDecoder.java:36)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:288)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:46:55 [http-nio-9090-exec-7] ERROR c.b.b.config.JwtAuthenticationFilter - 处理 JWT token 时发生错误
io.jsonwebtoken.io.DecodingException: Illegal base64url character: ' '
	at io.jsonwebtoken.io.Base64.ctoi(Base64.java:221)
	at io.jsonwebtoken.io.Base64.decodeFast(Base64.java:270)
	at io.jsonwebtoken.io.Base64Decoder.decode(Base64Decoder.java:36)
	at io.jsonwebtoken.io.Base64Decoder.decode(Base64Decoder.java:23)
	at io.jsonwebtoken.io.ExceptionPropagatingDecoder.decode(ExceptionPropagatingDecoder.java:36)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:288)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:47:10 [http-nio-9090-exec-8] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 00:47:10 [http-nio-9090-exec-8] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 00:47:10 [http-nio-9090-exec-8] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 00:47:10 [http-nio-9090-exec-8] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:47:10 [http-nio-9090-exec-8] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 00:47:10 [http-nio-9090-exec-8] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 00:47:10 [http-nio-9090-exec-8] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 00:47:10 [http-nio-9090-exec-8] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 00:47:10 [http-nio-9090-exec-8] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@5a9ffd94
2025-04-19 00:47:10 [http-nio-9090-exec-8] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:47:10 [http-nio-9090-exec-8] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 00:47:10 [http-nio-9090-exec-8] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 00:47:10 [http-nio-9090-exec-8] DEBUG c.b.b.m.CategoryMapper.selectList - ==>  Preparing: SELECT category_id,user_id,name,description,post_count,create_at,update_at FROM categories
2025-04-19 00:47:10 [http-nio-9090-exec-8] DEBUG c.b.b.m.CategoryMapper.selectList - ==> Parameters: 
2025-04-19 00:47:10 [http-nio-9090-exec-8] DEBUG c.b.b.m.CategoryMapper.selectList - <==      Total: 0
2025-04-19 00:47:18 [http-nio-9090-exec-1] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts/cover
2025-04-19 00:47:18 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 00:47:18 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 00:47:18 [http-nio-9090-exec-1] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:47:18 [http-nio-9090-exec-1] ERROR com.bupt.backend.service.JwtService - 解析 token 时发生错误
io.jsonwebtoken.io.DecodingException: Illegal base64url character: ' '
	at io.jsonwebtoken.io.Base64.ctoi(Base64.java:221)
	at io.jsonwebtoken.io.Base64.decodeFast(Base64.java:270)
	at io.jsonwebtoken.io.Base64Decoder.decode(Base64Decoder.java:36)
	at io.jsonwebtoken.io.Base64Decoder.decode(Base64Decoder.java:23)
	at io.jsonwebtoken.io.ExceptionPropagatingDecoder.decode(ExceptionPropagatingDecoder.java:36)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:288)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:47:18 [http-nio-9090-exec-1] ERROR c.b.b.config.JwtAuthenticationFilter - 处理 JWT token 时发生错误
io.jsonwebtoken.io.DecodingException: Illegal base64url character: ' '
	at io.jsonwebtoken.io.Base64.ctoi(Base64.java:221)
	at io.jsonwebtoken.io.Base64.decodeFast(Base64.java:270)
	at io.jsonwebtoken.io.Base64Decoder.decode(Base64Decoder.java:36)
	at io.jsonwebtoken.io.Base64Decoder.decode(Base64Decoder.java:23)
	at io.jsonwebtoken.io.ExceptionPropagatingDecoder.decode(ExceptionPropagatingDecoder.java:36)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:288)
	at io.jsonwebtoken.impl.DefaultJwtParser.parse(DefaultJwtParser.java:529)
	at io.jsonwebtoken.impl.DefaultJwtParser.parseClaimsJws(DefaultJwtParser.java:589)
	at io.jsonwebtoken.impl.ImmutableJwtParser.parseClaimsJws(ImmutableJwtParser.java:173)
	at com.bupt.backend.service.JwtService.extractAllClaims(JwtService.java:81)
	at com.bupt.backend.service.JwtService.extractClaim(JwtService.java:30)
	at com.bupt.backend.service.JwtService.extractUsername(JwtService.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:54)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 00:47:22 [http-nio-9090-exec-4] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts
2025-04-19 00:47:22 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 00:47:22 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 00:47:22 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:47:22 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 00:47:22 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 00:47:22 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 00:47:22 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 00:47:22 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@335c7f49
2025-04-19 00:47:22 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:47:22 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 00:47:22 [http-nio-9090-exec-4] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 00:47:22 [http-nio-9090-exec-4] DEBUG c.b.backend.mapper.PostMapper.insert - ==>  Preparing: INSERT INTO posts ( title, content, cover_image, status, view_count, like_count, create_at, update_at ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ? )
2025-04-19 00:47:22 [http-nio-9090-exec-4] DEBUG c.b.backend.mapper.PostMapper.insert - ==> Parameters: a(String), (String), (String), draft(String), 0(Integer), 0(Integer), 2025-04-19T00:47:22.596080(LocalDateTime), 2025-04-19T00:47:22.596140(LocalDateTime)
2025-04-19 00:47:23 [http-nio-9090-exec-4] ERROR c.b.b.service.impl.PostServiceImpl - 创建文章失败: 
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'myblog.posts' doesn't exist
### The error may exist in com/bupt/backend/mapper/PostMapper.java (best guess)
### The error may involve com.bupt.backend.mapper.PostMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO posts  ( title, content, cover_image, status, view_count, like_count, create_at, update_at )  VALUES (  ?, ?, ?, ?, ?, ?, ?, ?  )
### Cause: java.sql.SQLSyntaxErrorException: Table 'myblog.posts' doesn't exist
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:93)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:347)
	at jdk.proxy2/jdk.proxy2.$Proxy75.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:149)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:90)
	at jdk.proxy2/jdk.proxy2.$Proxy110.insert(Unknown Source)
	at com.bupt.backend.service.impl.PostServiceImpl.createPost(PostServiceImpl.java:43)
	at com.bupt.backend.controller.PostController.createPost(PostController.java:25)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Table 'myblog.posts' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:112)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:382)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy127.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:333)
	... 109 common frames omitted
2025-04-19 00:48:27 [http-nio-9090-exec-6] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 00:48:27 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 00:48:27 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 00:48:27 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:48:27 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 00:48:27 [http-nio-9090-exec-6] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 00:48:27 [http-nio-9090-exec-6] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 00:48:27 [http-nio-9090-exec-6] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 00:48:27 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@7717f298
2025-04-19 00:48:27 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:48:27 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 00:48:27 [http-nio-9090-exec-6] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 00:48:27 [http-nio-9090-exec-6] DEBUG c.b.b.m.CategoryMapper.selectList - ==>  Preparing: SELECT category_id,user_id,name,description,post_count,create_at,update_at FROM categories
2025-04-19 00:48:27 [http-nio-9090-exec-6] DEBUG c.b.b.m.CategoryMapper.selectList - ==> Parameters: 
2025-04-19 00:48:27 [http-nio-9090-exec-6] DEBUG c.b.b.m.CategoryMapper.selectList - <==      Total: 0
2025-04-19 00:48:40 [http-nio-9090-exec-8] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts/cover
2025-04-19 00:48:40 [http-nio-9090-exec-8] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 00:48:40 [http-nio-9090-exec-8] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 00:48:40 [http-nio-9090-exec-8] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:48:40 [http-nio-9090-exec-8] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 00:48:40 [http-nio-9090-exec-8] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 00:48:40 [http-nio-9090-exec-8] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 00:48:40 [http-nio-9090-exec-8] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 00:48:40 [http-nio-9090-exec-8] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@17ddb0c9
2025-04-19 00:48:40 [http-nio-9090-exec-8] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 00:48:40 [http-nio-9090-exec-8] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 00:48:40 [http-nio-9090-exec-8] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 00:48:40 [http-nio-9090-exec-8] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.multipart.MaxUploadSizeExceededException: Maximum upload size exceeded]
2025-04-19 01:05:57 [http-nio-9090-exec-10] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 01:05:57 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:05:57 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:05:57 [http-nio-9090-exec-10] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:05:57 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:05:57 [http-nio-9090-exec-10] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:05:57 [http-nio-9090-exec-10] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:05:58 [http-nio-9090-exec-10] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:05:58 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@5069f5fb
2025-04-19 01:05:58 [http-nio-9090-exec-10] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:05:58 [http-nio-9090-exec-10] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:05:58 [http-nio-9090-exec-10] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:05:58 [http-nio-9090-exec-10] DEBUG c.b.b.m.CategoryMapper.selectList - ==>  Preparing: SELECT category_id,user_id,name,description,post_count,create_at,update_at FROM categories
2025-04-19 01:05:58 [http-nio-9090-exec-10] DEBUG c.b.b.m.CategoryMapper.selectList - ==> Parameters: 
2025-04-19 01:05:58 [http-nio-9090-exec-10] DEBUG c.b.b.m.CategoryMapper.selectList - <==      Total: 0
2025-04-19 01:07:08 [http-nio-9090-exec-2] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 01:07:08 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:07:08 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:07:08 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:07:08 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:07:08 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:07:08 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:07:08 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:07:08 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@14ae90cb
2025-04-19 01:07:08 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:07:08 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:07:08 [http-nio-9090-exec-2] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:07:08 [http-nio-9090-exec-2] DEBUG c.b.b.m.CategoryMapper.selectList - ==>  Preparing: SELECT category_id,user_id,name,description,post_count,create_at,update_at FROM categories
2025-04-19 01:07:08 [http-nio-9090-exec-2] DEBUG c.b.b.m.CategoryMapper.selectList - ==> Parameters: 
2025-04-19 01:07:08 [http-nio-9090-exec-2] DEBUG c.b.b.m.CategoryMapper.selectList - <==      Total: 0
2025-04-19 01:07:26 [http-nio-9090-exec-4] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts/cover
2025-04-19 01:07:26 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:07:26 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:07:26 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:07:26 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:07:26 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:07:26 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:07:26 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:07:26 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@5f4b6298
2025-04-19 01:07:26 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:07:26 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:07:26 [http-nio-9090-exec-4] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:07:26 [http-nio-9090-exec-4] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.multipart.MaxUploadSizeExceededException: Maximum upload size exceeded]
2025-04-19 01:14:04 [http-nio-9090-exec-6] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 01:14:04 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:14:04 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:14:04 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:14:04 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:14:04 [http-nio-9090-exec-6] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:14:04 [http-nio-9090-exec-6] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:14:04 [http-nio-9090-exec-7] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 01:14:04 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:14:04 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:14:04 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:14:04 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:14:04 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:14:04 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:14:04 [http-nio-9090-exec-6] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:14:04 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@3055bc43
2025-04-19 01:14:04 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:14:04 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:14:04 [http-nio-9090-exec-6] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:14:04 [http-nio-9090-exec-6] DEBUG c.b.b.m.CategoryMapper.selectList - ==>  Preparing: SELECT category_id,user_id,name,description,post_count,create_at,update_at FROM categories
2025-04-19 01:14:04 [http-nio-9090-exec-6] DEBUG c.b.b.m.CategoryMapper.selectList - ==> Parameters: 
2025-04-19 01:14:04 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:14:04 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@5bcb8726
2025-04-19 01:14:04 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:14:04 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:14:04 [http-nio-9090-exec-7] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:14:04 [http-nio-9090-exec-7] DEBUG c.b.b.m.CategoryMapper.selectList - ==>  Preparing: SELECT category_id,user_id,name,description,post_count,create_at,update_at FROM categories
2025-04-19 01:14:04 [http-nio-9090-exec-7] DEBUG c.b.b.m.CategoryMapper.selectList - ==> Parameters: 
2025-04-19 01:14:04 [http-nio-9090-exec-6] DEBUG c.b.b.m.CategoryMapper.selectList - <==      Total: 0
2025-04-19 01:14:04 [http-nio-9090-exec-7] DEBUG c.b.b.m.CategoryMapper.selectList - <==      Total: 0
2025-04-19 01:14:58 [http-nio-9090-exec-9] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 01:14:58 [http-nio-9090-exec-9] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:14:58 [http-nio-9090-exec-9] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:14:58 [http-nio-9090-exec-9] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:14:58 [http-nio-9090-exec-9] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:14:58 [http-nio-9090-exec-9] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:14:58 [http-nio-9090-exec-9] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:14:58 [http-nio-9090-exec-9] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:14:58 [http-nio-9090-exec-9] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@14223fd6
2025-04-19 01:14:58 [http-nio-9090-exec-9] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:14:58 [http-nio-9090-exec-9] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:14:58 [http-nio-9090-exec-9] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:14:58 [http-nio-9090-exec-9] DEBUG c.b.b.m.CategoryMapper.selectList - ==>  Preparing: SELECT category_id,user_id,name,description,post_count,create_at,update_at FROM categories
2025-04-19 01:14:58 [http-nio-9090-exec-9] DEBUG c.b.b.m.CategoryMapper.selectList - ==> Parameters: 
2025-04-19 01:14:58 [http-nio-9090-exec-9] DEBUG c.b.b.m.CategoryMapper.selectList - <==      Total: 0
2025-04-19 01:15:09 [http-nio-9090-exec-1] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts/cover
2025-04-19 01:15:09 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:15:09 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:15:09 [http-nio-9090-exec-1] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:15:09 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:15:09 [http-nio-9090-exec-1] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:15:09 [http-nio-9090-exec-1] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:15:09 [http-nio-9090-exec-1] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:15:09 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@6a1abcab
2025-04-19 01:15:09 [http-nio-9090-exec-1] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:15:09 [http-nio-9090-exec-1] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:15:09 [http-nio-9090-exec-1] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:15:09 [http-nio-9090-exec-1] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.multipart.MaxUploadSizeExceededException: Maximum upload size exceeded]
2025-04-19 01:15:16 [http-nio-9090-exec-3] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts
2025-04-19 01:15:16 [http-nio-9090-exec-3] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:15:16 [http-nio-9090-exec-3] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:15:16 [http-nio-9090-exec-3] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:15:16 [http-nio-9090-exec-3] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:15:16 [http-nio-9090-exec-3] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:15:16 [http-nio-9090-exec-3] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:15:16 [http-nio-9090-exec-3] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:15:16 [http-nio-9090-exec-3] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@37d4ef78
2025-04-19 01:15:16 [http-nio-9090-exec-3] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:15:16 [http-nio-9090-exec-3] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:15:16 [http-nio-9090-exec-3] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:15:16 [http-nio-9090-exec-3] DEBUG c.b.backend.mapper.PostMapper.insert - ==>  Preparing: INSERT INTO posts ( title, content, cover_image, status, view_count, like_count, create_at, update_at ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ? )
2025-04-19 01:15:16 [http-nio-9090-exec-3] DEBUG c.b.backend.mapper.PostMapper.insert - ==> Parameters: a(String), 试试看(String), (String), draft(String), 0(Integer), 0(Integer), 2025-04-19T01:15:16.427008(LocalDateTime), 2025-04-19T01:15:16.427014(LocalDateTime)
2025-04-19 01:15:16 [http-nio-9090-exec-3] ERROR c.b.b.service.impl.PostServiceImpl - 创建文章失败: 
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'myblog.posts' doesn't exist
### The error may exist in com/bupt/backend/mapper/PostMapper.java (best guess)
### The error may involve com.bupt.backend.mapper.PostMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO posts  ( title, content, cover_image, status, view_count, like_count, create_at, update_at )  VALUES (  ?, ?, ?, ?, ?, ?, ?, ?  )
### Cause: java.sql.SQLSyntaxErrorException: Table 'myblog.posts' doesn't exist
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:93)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:347)
	at jdk.proxy2/jdk.proxy2.$Proxy75.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:149)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:90)
	at jdk.proxy2/jdk.proxy2.$Proxy110.insert(Unknown Source)
	at com.bupt.backend.service.impl.PostServiceImpl.createPost(PostServiceImpl.java:43)
	at com.bupt.backend.controller.PostController.createPost(PostController.java:25)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Table 'myblog.posts' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:112)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:382)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy127.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:333)
	... 109 common frames omitted
2025-04-19 01:15:18 [http-nio-9090-exec-4] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts
2025-04-19 01:15:18 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:15:18 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:15:18 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:15:18 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:15:18 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:15:18 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:15:18 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:15:18 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@56f60364
2025-04-19 01:15:18 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:15:18 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:15:18 [http-nio-9090-exec-4] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:15:18 [http-nio-9090-exec-4] DEBUG c.b.backend.mapper.PostMapper.insert - ==>  Preparing: INSERT INTO posts ( title, content, cover_image, status, view_count, like_count, create_at, update_at ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ? )
2025-04-19 01:15:18 [http-nio-9090-exec-4] DEBUG c.b.backend.mapper.PostMapper.insert - ==> Parameters: a(String), 试试看(String), (String), draft(String), 0(Integer), 0(Integer), 2025-04-19T01:15:18.221196(LocalDateTime), 2025-04-19T01:15:18.221200(LocalDateTime)
2025-04-19 01:15:18 [http-nio-9090-exec-4] ERROR c.b.b.service.impl.PostServiceImpl - 创建文章失败: 
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'myblog.posts' doesn't exist
### The error may exist in com/bupt/backend/mapper/PostMapper.java (best guess)
### The error may involve com.bupt.backend.mapper.PostMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO posts  ( title, content, cover_image, status, view_count, like_count, create_at, update_at )  VALUES (  ?, ?, ?, ?, ?, ?, ?, ?  )
### Cause: java.sql.SQLSyntaxErrorException: Table 'myblog.posts' doesn't exist
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:93)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:347)
	at jdk.proxy2/jdk.proxy2.$Proxy75.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:149)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:90)
	at jdk.proxy2/jdk.proxy2.$Proxy110.insert(Unknown Source)
	at com.bupt.backend.service.impl.PostServiceImpl.createPost(PostServiceImpl.java:43)
	at com.bupt.backend.controller.PostController.createPost(PostController.java:25)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Table 'myblog.posts' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:112)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:382)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy127.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:333)
	... 109 common frames omitted
2025-04-19 01:20:24 [http-nio-9090-exec-6] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts/cover
2025-04-19 01:20:24 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:20:24 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:20:24 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:20:24 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:20:24 [http-nio-9090-exec-6] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:20:24 [http-nio-9090-exec-6] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:20:24 [http-nio-9090-exec-6] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:20:24 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@73a8e70c
2025-04-19 01:20:24 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:20:24 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:20:24 [http-nio-9090-exec-6] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:20:24 [http-nio-9090-exec-6] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.multipart.MaxUploadSizeExceededException: Maximum upload size exceeded]
2025-04-19 01:20:30 [http-nio-9090-exec-8] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 01:20:30 [http-nio-9090-exec-8] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:20:30 [http-nio-9090-exec-8] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:20:30 [http-nio-9090-exec-8] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:20:30 [http-nio-9090-exec-8] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:20:30 [http-nio-9090-exec-8] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:20:30 [http-nio-9090-exec-8] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:20:30 [http-nio-9090-exec-8] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:20:30 [http-nio-9090-exec-8] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@4b214f78
2025-04-19 01:20:30 [http-nio-9090-exec-8] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:20:30 [http-nio-9090-exec-8] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:20:30 [http-nio-9090-exec-8] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:20:30 [http-nio-9090-exec-8] DEBUG c.b.b.m.CategoryMapper.selectList - ==>  Preparing: SELECT category_id,user_id,name,description,post_count,create_at,update_at FROM categories
2025-04-19 01:20:30 [http-nio-9090-exec-8] DEBUG c.b.b.m.CategoryMapper.selectList - ==> Parameters: 
2025-04-19 01:20:30 [http-nio-9090-exec-8] DEBUG c.b.b.m.CategoryMapper.selectList - <==      Total: 0
2025-04-19 01:20:49 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-04-19 01:20:51 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-04-19 01:20:51 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-19 01:20:51 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-19 01:20:51 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-19 01:20:54 [main] INFO  com.bupt.backend.BackendApplication - Starting BackendApplication using Java 21.0.6 with PID 19050 (/Users/apple/Desktop/MyProgram/myblog/backend/target/classes started by apple in /Users/apple/Desktop/MyProgram/myblog)
2025-04-19 01:20:54 [main] DEBUG com.bupt.backend.BackendApplication - Running with Spring Boot v3.4.4, Spring v6.2.5
2025-04-19 01:20:54 [main] INFO  com.bupt.backend.BackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-19 01:20:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-19 01:20:55 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 JPA repository interfaces.
2025-04-19 01:20:55 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-04-19 01:20:55 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-19 01:20:55 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-04-19 01:20:55 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-19 01:20:55 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 545 ms
2025-04-19 01:20:55 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-19 01:20:55 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@1a2773a8
2025-04-19 01:20:55 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-19 01:20:55 [main] DEBUG c.b.b.config.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-04-19 01:20:56 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-19 01:20:56 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-04-19 01:20:56 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-19 01:20:56 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-19 01:20:56 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.2
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-04-19 01:20:56 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-19 01:20:56 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-19 01:20:56 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-19 01:20:56 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-04-19 01:20:56 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-04-19 01:20:56 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-04-19 01:20:56 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-04-19 01:20:56 [main] INFO  com.bupt.backend.BackendApplication - Started BackendApplication in 2.162 seconds (process running for 2.755)
2025-04-19 01:21:27 [http-nio-9090-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-19 01:21:27 [http-nio-9090-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-19 01:21:27 [http-nio-9090-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 3 ms
2025-04-19 01:21:27 [http-nio-9090-exec-1] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts
2025-04-19 01:21:27 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:21:27 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:21:27 [http-nio-9090-exec-1] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:21:27 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:21:27 [http-nio-9090-exec-1] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:21:27 [http-nio-9090-exec-1] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:21:27 [http-nio-9090-exec-1] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:21:27 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@3f2aed0f
2025-04-19 01:21:27 [http-nio-9090-exec-1] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:21:27 [http-nio-9090-exec-1] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:21:27 [http-nio-9090-exec-1] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:21:27 [http-nio-9090-exec-1] DEBUG c.b.backend.mapper.PostMapper.insert - ==>  Preparing: INSERT INTO posts ( title, content, cover_image, status, view_count, like_count, create_at, update_at ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ? )
2025-04-19 01:21:27 [http-nio-9090-exec-1] DEBUG c.b.backend.mapper.PostMapper.insert - ==> Parameters: Test(String), aaaa(String), (String), draft(String), 0(Integer), 0(Integer), 2025-04-19T01:21:27.978992(LocalDateTime), 2025-04-19T01:21:27.979011(LocalDateTime)
2025-04-19 01:21:28 [http-nio-9090-exec-1] ERROR c.b.b.service.impl.PostServiceImpl - 创建文章失败: 
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'myblog.posts' doesn't exist
### The error may exist in com/bupt/backend/mapper/PostMapper.java (best guess)
### The error may involve com.bupt.backend.mapper.PostMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO posts  ( title, content, cover_image, status, view_count, like_count, create_at, update_at )  VALUES (  ?, ?, ?, ?, ?, ?, ?, ?  )
### Cause: java.sql.SQLSyntaxErrorException: Table 'myblog.posts' doesn't exist
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:93)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:347)
	at jdk.proxy2/jdk.proxy2.$Proxy76.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:149)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:90)
	at jdk.proxy2/jdk.proxy2.$Proxy110.insert(Unknown Source)
	at com.bupt.backend.service.impl.PostServiceImpl.createPost(PostServiceImpl.java:43)
	at com.bupt.backend.controller.PostController.createPost(PostController.java:25)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Table 'myblog.posts' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:112)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:382)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy126.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:333)
	... 109 common frames omitted
2025-04-19 01:21:29 [http-nio-9090-exec-2] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts
2025-04-19 01:21:29 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:21:29 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:21:29 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:21:29 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:21:29 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:21:29 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:21:29 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:21:29 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@70a041c7
2025-04-19 01:21:29 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:21:29 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:21:29 [http-nio-9090-exec-2] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:21:29 [http-nio-9090-exec-2] DEBUG c.b.backend.mapper.PostMapper.insert - ==>  Preparing: INSERT INTO posts ( title, content, cover_image, status, view_count, like_count, create_at, update_at ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ? )
2025-04-19 01:21:29 [http-nio-9090-exec-2] DEBUG c.b.backend.mapper.PostMapper.insert - ==> Parameters: Test(String), aaaa(String), (String), draft(String), 0(Integer), 0(Integer), 2025-04-19T01:21:29.578716(LocalDateTime), 2025-04-19T01:21:29.578728(LocalDateTime)
2025-04-19 01:21:29 [http-nio-9090-exec-2] ERROR c.b.b.service.impl.PostServiceImpl - 创建文章失败: 
org.springframework.jdbc.BadSqlGrammarException: 
### Error updating database.  Cause: java.sql.SQLSyntaxErrorException: Table 'myblog.posts' doesn't exist
### The error may exist in com/bupt/backend/mapper/PostMapper.java (best guess)
### The error may involve com.bupt.backend.mapper.PostMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO posts  ( title, content, cover_image, status, view_count, like_count, create_at, update_at )  VALUES (  ?, ?, ?, ?, ?, ?, ?, ?  )
### Cause: java.sql.SQLSyntaxErrorException: Table 'myblog.posts' doesn't exist
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:93)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:347)
	at jdk.proxy2/jdk.proxy2.$Proxy76.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:149)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:90)
	at jdk.proxy2/jdk.proxy2.$Proxy110.insert(Unknown Source)
	at com.bupt.backend.service.impl.PostServiceImpl.createPost(PostServiceImpl.java:43)
	at com.bupt.backend.controller.PostController.createPost(PostController.java:25)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Table 'myblog.posts' doesn't exist
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:112)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:382)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy126.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:333)
	... 109 common frames omitted
2025-04-19 01:25:02 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-04-19 01:25:04 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-04-19 01:25:04 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-19 01:25:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-19 01:25:04 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-19 01:25:05 [main] INFO  com.bupt.backend.BackendApplication - Starting BackendApplication using Java 21.0.6 with PID 19147 (/Users/apple/Desktop/MyProgram/myblog/backend/target/classes started by apple in /Users/apple/Desktop/MyProgram/myblog)
2025-04-19 01:25:05 [main] DEBUG com.bupt.backend.BackendApplication - Running with Spring Boot v3.4.4, Spring v6.2.5
2025-04-19 01:25:05 [main] INFO  com.bupt.backend.BackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-19 01:25:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-19 01:25:06 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 JPA repository interfaces.
2025-04-19 01:25:06 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-04-19 01:25:06 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-19 01:25:06 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-04-19 01:25:06 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-19 01:25:06 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 502 ms
2025-04-19 01:25:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-19 01:25:06 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@38087342
2025-04-19 01:25:06 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-19 01:25:07 [main] DEBUG c.b.b.config.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-04-19 01:25:07 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-19 01:25:07 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-04-19 01:25:07 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-19 01:25:07 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-19 01:25:07 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.2
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-04-19 01:25:07 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-19 01:25:07 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-19 01:25:07 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-19 01:25:07 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-04-19 01:25:07 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-04-19 01:25:07 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-04-19 01:25:07 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-04-19 01:25:07 [main] INFO  com.bupt.backend.BackendApplication - Started BackendApplication in 2.263 seconds (process running for 2.615)
2025-04-19 01:25:14 [http-nio-9090-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-19 01:25:14 [http-nio-9090-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-19 01:25:14 [http-nio-9090-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-04-19 01:25:14 [http-nio-9090-exec-1] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts
2025-04-19 01:25:14 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:25:14 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk0MTExLCJleHAiOjE3NDUwODA1MTF9.UVWW9jCwV3-D3Apuy5BL81Q52Tj0JiXfWW3PA2ZtNIU
2025-04-19 01:25:14 [http-nio-9090-exec-1] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:25:14 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:25:14 [http-nio-9090-exec-1] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:25:14 [http-nio-9090-exec-1] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:25:14 [http-nio-9090-exec-1] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 0
2025-04-19 01:25:14 [http-nio-9090-exec-1] ERROR c.b.b.config.JwtAuthenticationFilter - 处理 JWT token 时发生错误
org.springframework.security.core.userdetails.UsernameNotFoundException: 用户不存在: demo
	at com.bupt.backend.service.UserDetailsServiceImpl.loadUserByUsername(UserDetailsServiceImpl.java:26)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:58)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
2025-04-19 01:25:20 [http-nio-9090-exec-3] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/auth/login
2025-04-19 01:25:20 [http-nio-9090-exec-3] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: null
2025-04-19 01:25:20 [http-nio-9090-exec-3] WARN  c.b.b.config.JwtAuthenticationFilter - 未找到有效的 Authorization header
2025-04-19 01:25:20 [http-nio-9090-exec-3] DEBUG c.b.b.mapper.UserMapper.selectList - ==>  Preparing: SELECT userid,username,password,email,avatar,bio,post_count,like_count,view_count,create_at,last_login FROM users WHERE (username = ?)
2025-04-19 01:25:20 [http-nio-9090-exec-3] DEBUG c.b.b.mapper.UserMapper.selectList - ==> Parameters: demo(String)
2025-04-19 01:25:20 [http-nio-9090-exec-3] DEBUG c.b.b.mapper.UserMapper.selectList - <==      Total: 0
2025-04-19 01:25:21 [http-nio-9090-exec-5] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/auth/login
2025-04-19 01:25:21 [http-nio-9090-exec-5] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: null
2025-04-19 01:25:21 [http-nio-9090-exec-5] WARN  c.b.b.config.JwtAuthenticationFilter - 未找到有效的 Authorization header
2025-04-19 01:25:21 [http-nio-9090-exec-5] DEBUG c.b.b.mapper.UserMapper.selectList - ==>  Preparing: SELECT userid,username,password,email,avatar,bio,post_count,like_count,view_count,create_at,last_login FROM users WHERE (username = ?)
2025-04-19 01:25:21 [http-nio-9090-exec-5] DEBUG c.b.b.mapper.UserMapper.selectList - ==> Parameters: demo(String)
2025-04-19 01:25:21 [http-nio-9090-exec-5] DEBUG c.b.b.mapper.UserMapper.selectList - <==      Total: 0
2025-04-19 01:25:22 [http-nio-9090-exec-6] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/auth/login
2025-04-19 01:25:22 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: null
2025-04-19 01:25:22 [http-nio-9090-exec-6] WARN  c.b.b.config.JwtAuthenticationFilter - 未找到有效的 Authorization header
2025-04-19 01:25:22 [http-nio-9090-exec-6] DEBUG c.b.b.mapper.UserMapper.selectList - ==>  Preparing: SELECT userid,username,password,email,avatar,bio,post_count,like_count,view_count,create_at,last_login FROM users WHERE (username = ?)
2025-04-19 01:25:22 [http-nio-9090-exec-6] DEBUG c.b.b.mapper.UserMapper.selectList - ==> Parameters: demo(String)
2025-04-19 01:25:22 [http-nio-9090-exec-6] DEBUG c.b.b.mapper.UserMapper.selectList - <==      Total: 0
2025-04-19 01:25:22 [http-nio-9090-exec-7] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/auth/login
2025-04-19 01:25:22 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: null
2025-04-19 01:25:22 [http-nio-9090-exec-7] WARN  c.b.b.config.JwtAuthenticationFilter - 未找到有效的 Authorization header
2025-04-19 01:25:22 [http-nio-9090-exec-7] DEBUG c.b.b.mapper.UserMapper.selectList - ==>  Preparing: SELECT userid,username,password,email,avatar,bio,post_count,like_count,view_count,create_at,last_login FROM users WHERE (username = ?)
2025-04-19 01:25:22 [http-nio-9090-exec-7] DEBUG c.b.b.mapper.UserMapper.selectList - ==> Parameters: demo(String)
2025-04-19 01:25:22 [http-nio-9090-exec-7] DEBUG c.b.b.mapper.UserMapper.selectList - <==      Total: 0
2025-04-19 01:25:52 [http-nio-9090-exec-10] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/auth/register
2025-04-19 01:25:52 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: null
2025-04-19 01:25:52 [http-nio-9090-exec-10] WARN  c.b.b.config.JwtAuthenticationFilter - 未找到有效的 Authorization header
2025-04-19 01:25:52 [http-nio-9090-exec-10] INFO  c.b.b.controller.AuthController - 收到注册请求: demo
2025-04-19 01:25:52 [http-nio-9090-exec-10] INFO  c.b.b.service.impl.AuthServiceImpl - 开始注册用户: demo
2025-04-19 01:25:52 [http-nio-9090-exec-10] DEBUG c.b.b.m.UserMapper.existsByUsername - ==>  Preparing: SELECT EXISTS(SELECT 1 FROM users WHERE username = ?)
2025-04-19 01:25:52 [http-nio-9090-exec-10] DEBUG c.b.b.m.UserMapper.existsByUsername - ==> Parameters: demo(String)
2025-04-19 01:25:52 [http-nio-9090-exec-10] DEBUG c.b.b.m.UserMapper.existsByUsername - <==      Total: 1
2025-04-19 01:25:53 [http-nio-9090-exec-10] INFO  c.b.b.service.impl.AuthServiceImpl - 准备插入用户数据: User(userid=null, username=demo, password=$2a$10$Splde25CsMLjvxI9fNbGs.CkQDLbJtYURtHB0UQ21xbiN7p3I2nUm, email=demo@example.com, avatar=, bio=, postCount=0, likeCount=0, viewCount=0, createAt=2025-04-19T01:25:53.029956, lastLogin=null)
2025-04-19 01:25:53 [http-nio-9090-exec-10] DEBUG c.b.backend.mapper.UserMapper.insert - ==>  Preparing: INSERT INTO users ( username, password, email, avatar, bio, post_count, like_count, view_count, create_at ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-04-19 01:25:53 [http-nio-9090-exec-10] DEBUG c.b.backend.mapper.UserMapper.insert - ==> Parameters: demo(String), $2a$10$Splde25CsMLjvxI9fNbGs.CkQDLbJtYURtHB0UQ21xbiN7p3I2nUm(String), demo@example.com(String), (String), (String), 0(Integer), 0(Integer), 0(Integer), 2025-04-19T01:25:53.029956(LocalDateTime)
2025-04-19 01:25:53 [http-nio-9090-exec-10] DEBUG c.b.backend.mapper.UserMapper.insert - <==    Updates: 1
2025-04-19 01:25:53 [http-nio-9090-exec-10] INFO  c.b.b.service.impl.AuthServiceImpl - 用户插入结果: 1
2025-04-19 01:25:53 [http-nio-9090-exec-10] INFO  c.b.b.controller.AuthController - 注册结果: Result(code=200, msg=success, data=注册成功)
2025-04-19 01:25:53 [http-nio-9090-exec-1] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/auth/login
2025-04-19 01:25:53 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: null
2025-04-19 01:25:53 [http-nio-9090-exec-1] WARN  c.b.b.config.JwtAuthenticationFilter - 未找到有效的 Authorization header
2025-04-19 01:25:53 [http-nio-9090-exec-1] DEBUG c.b.b.mapper.UserMapper.selectList - ==>  Preparing: SELECT userid,username,password,email,avatar,bio,post_count,like_count,view_count,create_at,last_login FROM users WHERE (username = ?)
2025-04-19 01:25:53 [http-nio-9090-exec-1] DEBUG c.b.b.mapper.UserMapper.selectList - ==> Parameters: demo(String)
2025-04-19 01:25:53 [http-nio-9090-exec-1] DEBUG c.b.b.mapper.UserMapper.selectList - <==      Total: 1
2025-04-19 01:25:53 [http-nio-9090-exec-1] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:25:53 [http-nio-9090-exec-1] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:25:53 [http-nio-9090-exec-1] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:25:53 [http-nio-9090-exec-1] INFO  com.bupt.backend.service.JwtService - 为用户 demo 生成 token
2025-04-19 01:25:53 [http-nio-9090-exec-1] DEBUG com.bupt.backend.service.JwtService - 生成的 token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:25:56 [http-nio-9090-exec-3] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 01:25:56 [http-nio-9090-exec-3] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:25:56 [http-nio-9090-exec-3] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:25:56 [http-nio-9090-exec-3] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:25:56 [http-nio-9090-exec-3] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:25:56 [http-nio-9090-exec-3] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:25:56 [http-nio-9090-exec-3] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:25:56 [http-nio-9090-exec-3] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:25:56 [http-nio-9090-exec-3] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@4e2aba9d
2025-04-19 01:25:56 [http-nio-9090-exec-3] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:25:56 [http-nio-9090-exec-3] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:25:56 [http-nio-9090-exec-3] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:25:56 [http-nio-9090-exec-3] DEBUG c.b.b.m.CategoryMapper.selectList - ==>  Preparing: SELECT category_id,user_id,name,description,post_count,create_at,update_at FROM categories
2025-04-19 01:25:56 [http-nio-9090-exec-3] DEBUG c.b.b.m.CategoryMapper.selectList - ==> Parameters: 
2025-04-19 01:25:56 [http-nio-9090-exec-3] ERROR c.b.b.s.impl.CategoryServiceImpl - 获取所有分类失败: 
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'user_id' in 'field list'
### The error may exist in com/bupt/backend/mapper/CategoryMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  category_id,user_id,name,description,post_count,create_at,update_at  FROM categories
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'user_id' in 'field list'
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:93)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:347)
	at jdk.proxy2/jdk.proxy2.$Proxy76.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:194)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:164)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:149)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:90)
	at jdk.proxy2/jdk.proxy2.$Proxy109.selectList(Unknown Source)
	at com.bupt.backend.service.impl.CategoryServiceImpl.getAllCategories(CategoryServiceImpl.java:103)
	at com.bupt.backend.controller.CategoryController.getAllCategories(CategoryController.java:60)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'user_id' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:112)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:382)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy126.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:333)
	... 110 common frames omitted
2025-04-19 01:27:16 [http-nio-9090-exec-5] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts
2025-04-19 01:27:16 [http-nio-9090-exec-5] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:27:16 [http-nio-9090-exec-5] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:27:16 [http-nio-9090-exec-5] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:27:16 [http-nio-9090-exec-5] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:27:16 [http-nio-9090-exec-5] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:27:16 [http-nio-9090-exec-5] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:27:16 [http-nio-9090-exec-5] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:27:16 [http-nio-9090-exec-5] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@7794f050
2025-04-19 01:27:16 [http-nio-9090-exec-5] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:27:16 [http-nio-9090-exec-5] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:27:16 [http-nio-9090-exec-5] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:27:16 [http-nio-9090-exec-5] DEBUG c.b.backend.mapper.PostMapper.insert - ==>  Preparing: INSERT INTO posts ( title, content, cover_image, status, view_count, like_count, create_at, update_at ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ? )
2025-04-19 01:27:16 [http-nio-9090-exec-5] DEBUG c.b.backend.mapper.PostMapper.insert - ==> Parameters: (String), (String), (String), draft(String), 0(Integer), 0(Integer), 2025-04-19T01:27:16.767672(LocalDateTime), 2025-04-19T01:27:16.767688(LocalDateTime)
2025-04-19 01:27:16 [http-nio-9090-exec-5] ERROR c.b.b.service.impl.PostServiceImpl - 创建文章失败: 
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'user_id' doesn't have a default value
### The error may exist in com/bupt/backend/mapper/PostMapper.java (best guess)
### The error may involve com.bupt.backend.mapper.PostMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO posts  ( title, content, cover_image, status, view_count, like_count, create_at, update_at )  VALUES (  ?, ?, ?, ?, ?, ?, ?, ?  )
### Cause: java.sql.SQLException: Field 'user_id' doesn't have a default value
; Field 'user_id' doesn't have a default value
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:258)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:93)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:347)
	at jdk.proxy2/jdk.proxy2.$Proxy76.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:149)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:90)
	at jdk.proxy2/jdk.proxy2.$Proxy110.insert(Unknown Source)
	at com.bupt.backend.service.impl.PostServiceImpl.createPost(PostServiceImpl.java:43)
	at com.bupt.backend.controller.PostController.createPost(PostController.java:25)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLException: Field 'user_id' doesn't have a default value
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:382)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy126.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:333)
	... 109 common frames omitted
2025-04-19 01:36:34 [http-nio-9090-exec-7] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts
2025-04-19 01:36:34 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:36:34 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:36:34 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:36:34 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:36:34 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:36:34 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:36:34 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:36:34 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@4831dc95
2025-04-19 01:36:34 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:36:34 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:36:34 [http-nio-9090-exec-7] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:36:34 [http-nio-9090-exec-7] DEBUG c.b.backend.mapper.PostMapper.insert - ==>  Preparing: INSERT INTO posts ( title, content, cover_image, status, view_count, like_count, create_at, update_at ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ? )
2025-04-19 01:36:34 [http-nio-9090-exec-7] DEBUG c.b.backend.mapper.PostMapper.insert - ==> Parameters: (String), (String), (String), draft(String), 0(Integer), 0(Integer), 2025-04-19T01:36:34.729703(LocalDateTime), 2025-04-19T01:36:34.729707(LocalDateTime)
2025-04-19 01:36:34 [http-nio-9090-exec-7] ERROR c.b.b.service.impl.PostServiceImpl - 创建文章失败: 
org.springframework.dao.DataIntegrityViolationException: 
### Error updating database.  Cause: java.sql.SQLException: Field 'user_id' doesn't have a default value
### The error may exist in com/bupt/backend/mapper/PostMapper.java (best guess)
### The error may involve com.bupt.backend.mapper.PostMapper.insert-Inline
### The error occurred while setting parameters
### SQL: INSERT INTO posts  ( title, content, cover_image, status, view_count, like_count, create_at, update_at )  VALUES (  ?, ?, ?, ?, ?, ?, ?, ?  )
### Cause: java.sql.SQLException: Field 'user_id' doesn't have a default value
; Field 'user_id' doesn't have a default value
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:258)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:93)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:347)
	at jdk.proxy2/jdk.proxy2.$Proxy76.insert(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.insert(SqlSessionTemplate.java:224)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:59)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:149)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:90)
	at jdk.proxy2/jdk.proxy2.$Proxy110.insert(Unknown Source)
	at com.bupt.backend.service.impl.PostServiceImpl.createPost(PostServiceImpl.java:43)
	at com.bupt.backend.controller.PostController.createPost(PostController.java:25)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLException: Field 'user_id' doesn't have a default value
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:121)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:382)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy126.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.update(PreparedStatementHandler.java:48)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.update(RoutingStatementHandler.java:75)
	at org.apache.ibatis.executor.SimpleExecutor.doUpdate(SimpleExecutor.java:50)
	at org.apache.ibatis.executor.BaseExecutor.update(BaseExecutor.java:117)
	at org.apache.ibatis.executor.CachingExecutor.update(CachingExecutor.java:76)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.update(DefaultSqlSession.java:197)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.insert(DefaultSqlSession.java:184)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:333)
	... 109 common frames omitted
2025-04-19 01:36:45 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-04-19 01:36:47 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-04-19 01:36:47 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-19 01:36:47 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-19 01:36:47 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-19 01:54:09 [main] INFO  com.bupt.backend.BackendApplication - Starting BackendApplication using Java 21.0.6 with PID 19886 (/Users/apple/Desktop/MyProgram/myblog/backend/target/classes started by apple in /Users/apple/Desktop/MyProgram/myblog)
2025-04-19 01:54:09 [main] DEBUG com.bupt.backend.BackendApplication - Running with Spring Boot v3.4.4, Spring v6.2.5
2025-04-19 01:54:09 [main] INFO  com.bupt.backend.BackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-19 01:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-19 01:54:09 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 JPA repository interfaces.
2025-04-19 01:54:10 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-04-19 01:54:10 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-19 01:54:10 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-04-19 01:54:10 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-19 01:54:10 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 514 ms
2025-04-19 01:54:10 [main] WARN  c.b.m.core.injector.methods.Insert - [com.bupt.backend.mapper.PostMapper.insert] Has been loaded by XML or SqlProvider or Mybatis's Annotation, so ignoring this injection for [class com.baomidou.mybatisplus.core.injector.methods.Insert]
2025-04-19 01:54:10 [main] DEBUG c.b.b.config.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-04-19 01:54:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-19 01:54:10 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@8077c97
2025-04-19 01:54:10 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-19 01:54:10 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-19 01:54:10 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-04-19 01:54:10 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-19 01:54:10 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-19 01:54:10 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.2
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-04-19 01:54:10 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-19 01:54:10 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-19 01:54:10 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-19 01:54:10 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-04-19 01:54:10 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-04-19 01:54:11 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-04-19 01:54:11 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-04-19 01:54:11 [main] INFO  com.bupt.backend.BackendApplication - Started BackendApplication in 1.712 seconds (process running for 2.058)
2025-04-19 01:54:16 [http-nio-9090-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-19 01:54:16 [http-nio-9090-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-19 01:54:16 [http-nio-9090-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 7 ms
2025-04-19 01:54:16 [http-nio-9090-exec-2] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts
2025-04-19 01:54:16 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:54:16 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:54:16 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:54:16 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:54:16 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:54:16 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:54:16 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:54:16 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@799a3a89
2025-04-19 01:54:16 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:54:16 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:54:16 [http-nio-9090-exec-2] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:54:16 [http-nio-9090-exec-2] DEBUG c.b.backend.mapper.PostMapper.insert - ==>  Preparing: INSERT INTO posts ( title, content, cover_image, status, user_id, category_id, view_count, like_count, create_at, update_at ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-04-19 01:54:16 [http-nio-9090-exec-2] DEBUG c.b.backend.mapper.PostMapper.insert - ==> Parameters: (String), (String), (String), draft(String), null, null, 0(Integer), 0(Integer), 2025-04-19T01:54:16.356961(LocalDateTime), 2025-04-19T01:54:16.356978(LocalDateTime)
2025-04-19 01:54:16 [http-nio-9090-exec-2] DEBUG c.b.backend.mapper.PostMapper.insert - <==    Updates: 1
2025-04-19 01:54:59 [http-nio-9090-exec-5] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts/cover
2025-04-19 01:54:59 [http-nio-9090-exec-5] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:54:59 [http-nio-9090-exec-5] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:54:59 [http-nio-9090-exec-5] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:54:59 [http-nio-9090-exec-5] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:54:59 [http-nio-9090-exec-5] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:54:59 [http-nio-9090-exec-5] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:54:59 [http-nio-9090-exec-5] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:54:59 [http-nio-9090-exec-5] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@777d20fc
2025-04-19 01:54:59 [http-nio-9090-exec-5] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:54:59 [http-nio-9090-exec-5] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:54:59 [http-nio-9090-exec-5] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:54:59 [http-nio-9090-exec-5] WARN  o.s.w.s.m.s.DefaultHandlerExceptionResolver - Resolved [org.springframework.web.multipart.MaxUploadSizeExceededException: Maximum upload size exceeded]
2025-04-19 01:55:07 [http-nio-9090-exec-7] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts
2025-04-19 01:55:07 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:55:07 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:55:07 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:55:07 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:55:07 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:55:07 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:55:07 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:55:07 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@24082d3a
2025-04-19 01:55:07 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:55:07 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:55:07 [http-nio-9090-exec-7] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:55:07 [http-nio-9090-exec-7] DEBUG c.b.backend.mapper.PostMapper.insert - ==>  Preparing: INSERT INTO posts ( title, content, cover_image, status, user_id, category_id, view_count, like_count, create_at, update_at ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-04-19 01:55:07 [http-nio-9090-exec-7] DEBUG c.b.backend.mapper.PostMapper.insert - ==> Parameters: a(String), aaaaaa
(String), (String), draft(String), null, null, 0(Integer), 0(Integer), 2025-04-19T01:55:07.119057(LocalDateTime), 2025-04-19T01:55:07.119071(LocalDateTime)
2025-04-19 01:55:07 [http-nio-9090-exec-7] DEBUG c.b.backend.mapper.PostMapper.insert - <==    Updates: 1
2025-04-19 01:55:07 [http-nio-9090-exec-8] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts
2025-04-19 01:55:07 [http-nio-9090-exec-8] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:55:07 [http-nio-9090-exec-8] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:55:07 [http-nio-9090-exec-8] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:55:07 [http-nio-9090-exec-8] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:55:07 [http-nio-9090-exec-8] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:55:07 [http-nio-9090-exec-8] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:55:07 [http-nio-9090-exec-8] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:55:07 [http-nio-9090-exec-8] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@238c4283
2025-04-19 01:55:07 [http-nio-9090-exec-8] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:55:07 [http-nio-9090-exec-8] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:55:07 [http-nio-9090-exec-8] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:55:07 [http-nio-9090-exec-8] DEBUG c.b.backend.mapper.PostMapper.insert - ==>  Preparing: INSERT INTO posts ( title, content, cover_image, status, user_id, category_id, view_count, like_count, create_at, update_at ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-04-19 01:55:07 [http-nio-9090-exec-8] DEBUG c.b.backend.mapper.PostMapper.insert - ==> Parameters: a(String), aaaaaa
(String), (String), draft(String), null, null, 0(Integer), 0(Integer), 2025-04-19T01:55:07.961922(LocalDateTime), 2025-04-19T01:55:07.961937(LocalDateTime)
2025-04-19 01:55:07 [http-nio-9090-exec-8] DEBUG c.b.backend.mapper.PostMapper.insert - <==    Updates: 1
2025-04-19 01:55:07 [http-nio-9090-exec-10] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts/3/publish
2025-04-19 01:55:07 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:55:07 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:55:07 [http-nio-9090-exec-10] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:55:07 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:55:07 [http-nio-9090-exec-10] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:55:07 [http-nio-9090-exec-10] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:55:07 [http-nio-9090-exec-10] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:55:07 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@2289db29
2025-04-19 01:55:07 [http-nio-9090-exec-10] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:55:07 [http-nio-9090-exec-10] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:55:07 [http-nio-9090-exec-10] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:55:07 [http-nio-9090-exec-10] DEBUG c.b.b.mapper.PostMapper.selectById - ==>  Preparing: SELECT post_id,user_id,category_id,title,content,cover_image,status,view_count,like_count,create_at,update_at,publish_at FROM posts WHERE post_id=?
2025-04-19 01:55:07 [http-nio-9090-exec-10] DEBUG c.b.b.mapper.PostMapper.selectById - ==> Parameters: 3(Long)
2025-04-19 01:55:08 [http-nio-9090-exec-10] ERROR c.b.b.service.impl.PostServiceImpl - 发布文章失败: 
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'publish_at' in 'field list'
### The error may exist in com/bupt/backend/mapper/PostMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT post_id,user_id,category_id,title,content,cover_image,status,view_count,like_count,create_at,update_at,publish_at FROM posts WHERE post_id=?
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'publish_at' in 'field list'
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:93)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:347)
	at jdk.proxy2/jdk.proxy2.$Proxy75.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:154)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:87)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:149)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:90)
	at jdk.proxy2/jdk.proxy2.$Proxy110.selectById(Unknown Source)
	at com.bupt.backend.service.impl.PostServiceImpl.publishPost(PostServiceImpl.java:76)
	at com.bupt.backend.controller.PostController.publishPost(PostController.java:37)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'publish_at' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:112)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:382)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy126.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:75)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:333)
	... 109 common frames omitted
2025-04-19 01:58:13 [http-nio-9090-exec-2] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts
2025-04-19 01:58:13 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:58:13 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:58:13 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:58:13 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:58:13 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:58:13 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:58:13 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:58:13 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@4786927f
2025-04-19 01:58:13 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:58:14 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:58:14 [http-nio-9090-exec-2] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:58:14 [http-nio-9090-exec-2] DEBUG c.b.backend.mapper.PostMapper.insert - ==>  Preparing: INSERT INTO posts ( title, content, cover_image, status, user_id, category_id, view_count, like_count, create_at, update_at ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-04-19 01:58:14 [http-nio-9090-exec-2] DEBUG c.b.backend.mapper.PostMapper.insert - ==> Parameters: a(String), aaaaaa
(String), (String), draft(String), null, null, 0(Integer), 0(Integer), 2025-04-19T01:58:14.007403(LocalDateTime), 2025-04-19T01:58:14.007420(LocalDateTime)
2025-04-19 01:58:14 [http-nio-9090-exec-2] DEBUG c.b.backend.mapper.PostMapper.insert - <==    Updates: 1
2025-04-19 01:58:14 [http-nio-9090-exec-4] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts/4/publish
2025-04-19 01:58:14 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:58:14 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:58:14 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:58:14 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:58:14 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:58:14 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:58:14 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:58:14 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@4aa41478
2025-04-19 01:58:14 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:58:14 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:58:14 [http-nio-9090-exec-4] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:58:14 [http-nio-9090-exec-4] DEBUG c.b.b.mapper.PostMapper.selectById - ==>  Preparing: SELECT post_id,user_id,category_id,title,content,cover_image,status,view_count,like_count,create_at,update_at,publish_at FROM posts WHERE post_id=?
2025-04-19 01:58:14 [http-nio-9090-exec-4] DEBUG c.b.b.mapper.PostMapper.selectById - ==> Parameters: 4(Long)
2025-04-19 01:58:14 [http-nio-9090-exec-4] DEBUG c.b.b.mapper.PostMapper.selectById - <==      Total: 1
2025-04-19 01:58:14 [http-nio-9090-exec-4] DEBUG c.b.b.mapper.PostMapper.updateById - ==>  Preparing: UPDATE posts SET title=?, content=?, cover_image=?, status=?, view_count=?, like_count=?, create_at=?, update_at=?, publish_at=? WHERE post_id=?
2025-04-19 01:58:14 [http-nio-9090-exec-4] DEBUG c.b.b.mapper.PostMapper.updateById - ==> Parameters: a(String), aaaaaa
(String), (String), published(String), 0(Integer), 0(Integer), 2025-04-19T01:58:14(LocalDateTime), 2025-04-19T01:58:14(LocalDateTime), 2025-04-19T01:58:14.036098(LocalDateTime), 4(Long)
2025-04-19 01:58:14 [http-nio-9090-exec-4] DEBUG c.b.b.mapper.PostMapper.updateById - <==    Updates: 1
2025-04-19 01:58:14 [http-nio-9090-exec-4] DEBUG c.b.b.mapper.UserMapper.selectById - ==>  Preparing: SELECT userid,username,password,email,avatar,bio,post_count,like_count,view_count,create_at,last_login FROM users WHERE userid=?
2025-04-19 01:58:14 [http-nio-9090-exec-4] DEBUG c.b.b.mapper.UserMapper.selectById - ==> Parameters: null
2025-04-19 01:58:14 [http-nio-9090-exec-4] DEBUG c.b.b.mapper.UserMapper.selectById - <==      Total: 0
2025-04-19 01:59:26 [http-nio-9090-exec-7] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 01:59:26 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:59:26 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:59:26 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:59:26 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:59:26 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:59:26 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:59:26 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:59:26 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@3c174108
2025-04-19 01:59:26 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:59:26 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:59:26 [http-nio-9090-exec-7] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:59:26 [http-nio-9090-exec-7] DEBUG c.b.b.m.CategoryMapper.selectList - ==>  Preparing: SELECT category_id,user_id,name,description,post_count,create_at,update_at FROM categories
2025-04-19 01:59:26 [http-nio-9090-exec-7] DEBUG c.b.b.m.CategoryMapper.selectList - ==> Parameters: 
2025-04-19 01:59:26 [http-nio-9090-exec-7] ERROR c.b.b.s.impl.CategoryServiceImpl - 获取所有分类失败: 
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'post_count' in 'field list'
### The error may exist in com/bupt/backend/mapper/CategoryMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  category_id,user_id,name,description,post_count,create_at,update_at  FROM categories
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'post_count' in 'field list'
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:93)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:347)
	at jdk.proxy2/jdk.proxy2.$Proxy75.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:194)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:164)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:149)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:90)
	at jdk.proxy2/jdk.proxy2.$Proxy109.selectList(Unknown Source)
	at com.bupt.backend.service.impl.CategoryServiceImpl.getAllCategories(CategoryServiceImpl.java:103)
	at com.bupt.backend.controller.CategoryController.getAllCategories(CategoryController.java:60)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'post_count' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:112)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:382)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy126.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:333)
	... 110 common frames omitted
2025-04-19 01:59:30 [http-nio-9090-exec-9] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts
2025-04-19 01:59:30 [http-nio-9090-exec-9] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:59:30 [http-nio-9090-exec-9] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:59:30 [http-nio-9090-exec-9] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:59:30 [http-nio-9090-exec-9] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:59:30 [http-nio-9090-exec-9] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:59:30 [http-nio-9090-exec-9] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:59:30 [http-nio-9090-exec-9] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:59:30 [http-nio-9090-exec-9] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@3ba9fcbc
2025-04-19 01:59:30 [http-nio-9090-exec-9] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:59:30 [http-nio-9090-exec-9] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:59:30 [http-nio-9090-exec-9] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:59:30 [http-nio-9090-exec-9] DEBUG c.b.backend.mapper.PostMapper.insert - ==>  Preparing: INSERT INTO posts ( title, content, cover_image, status, user_id, category_id, view_count, like_count, create_at, update_at ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-04-19 01:59:30 [http-nio-9090-exec-9] DEBUG c.b.backend.mapper.PostMapper.insert - ==> Parameters: (String), (String), (String), draft(String), null, null, 0(Integer), 0(Integer), 2025-04-19T01:59:30.841652(LocalDateTime), 2025-04-19T01:59:30.841656(LocalDateTime)
2025-04-19 01:59:30 [http-nio-9090-exec-9] DEBUG c.b.backend.mapper.PostMapper.insert - <==    Updates: 1
2025-04-19 01:59:32 [http-nio-9090-exec-10] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts
2025-04-19 01:59:32 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:59:32 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:59:32 [http-nio-9090-exec-10] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:59:32 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:59:32 [http-nio-9090-exec-10] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:59:32 [http-nio-9090-exec-10] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:59:32 [http-nio-9090-exec-10] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:59:32 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@2c19de79
2025-04-19 01:59:32 [http-nio-9090-exec-10] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:59:32 [http-nio-9090-exec-10] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:59:32 [http-nio-9090-exec-10] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:59:32 [http-nio-9090-exec-10] DEBUG c.b.backend.mapper.PostMapper.insert - ==>  Preparing: INSERT INTO posts ( title, content, cover_image, status, user_id, category_id, view_count, like_count, create_at, update_at ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-04-19 01:59:32 [http-nio-9090-exec-10] DEBUG c.b.backend.mapper.PostMapper.insert - ==> Parameters: (String), (String), (String), draft(String), null, null, 0(Integer), 0(Integer), 2025-04-19T01:59:32.573141(LocalDateTime), 2025-04-19T01:59:32.573143(LocalDateTime)
2025-04-19 01:59:32 [http-nio-9090-exec-10] DEBUG c.b.backend.mapper.PostMapper.insert - <==    Updates: 1
2025-04-19 01:59:32 [http-nio-9090-exec-2] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts/6/publish
2025-04-19 01:59:32 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:59:32 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:59:32 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:59:32 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:59:32 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:59:32 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:59:32 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:59:32 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@369167bc
2025-04-19 01:59:32 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:59:32 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:59:32 [http-nio-9090-exec-2] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:59:32 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.PostMapper.selectById - ==>  Preparing: SELECT post_id,user_id,category_id,title,content,cover_image,status,view_count,like_count,create_at,update_at,publish_at FROM posts WHERE post_id=?
2025-04-19 01:59:32 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.PostMapper.selectById - ==> Parameters: 6(Long)
2025-04-19 01:59:32 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.PostMapper.selectById - <==      Total: 1
2025-04-19 01:59:32 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.PostMapper.updateById - ==>  Preparing: UPDATE posts SET title=?, content=?, cover_image=?, status=?, view_count=?, like_count=?, create_at=?, update_at=?, publish_at=? WHERE post_id=?
2025-04-19 01:59:32 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.PostMapper.updateById - ==> Parameters: (String), (String), (String), published(String), 0(Integer), 0(Integer), 2025-04-19T01:59:33(LocalDateTime), 2025-04-19T01:59:33(LocalDateTime), 2025-04-19T01:59:32.759994(LocalDateTime), 6(Long)
2025-04-19 01:59:32 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.PostMapper.updateById - <==    Updates: 1
2025-04-19 01:59:32 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.UserMapper.selectById - ==>  Preparing: SELECT userid,username,password,email,avatar,bio,post_count,like_count,view_count,create_at,last_login FROM users WHERE userid=?
2025-04-19 01:59:32 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.UserMapper.selectById - ==> Parameters: null
2025-04-19 01:59:32 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.UserMapper.selectById - <==      Total: 0
2025-04-19 01:59:34 [http-nio-9090-exec-4] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/posts/recent
2025-04-19 01:59:34 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:59:34 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 01:59:34 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:59:34 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 01:59:34 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 01:59:34 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 01:59:34 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 01:59:34 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@77a857e7
2025-04-19 01:59:34 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 01:59:34 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 01:59:34 [http-nio-9090-exec-4] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 01:59:34 [http-nio-9090-exec-4] DEBUG c.b.b.m.PostMapper.selectRecentPosts - ==>  Preparing: SELECT * FROM posts WHERE user_id = ? AND status = 'published' ORDER BY publish_at DESC LIMIT ?
2025-04-19 01:59:34 [http-nio-9090-exec-4] DEBUG c.b.b.m.PostMapper.selectRecentPosts - ==> Parameters: 1(Long), 2(Integer)
2025-04-19 01:59:34 [http-nio-9090-exec-4] DEBUG c.b.b.m.PostMapper.selectRecentPosts - <==      Total: 0
2025-04-19 02:00:06 [http-nio-9090-exec-6] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/posts/recent
2025-04-19 02:00:06 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:00:06 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:00:06 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:00:06 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:00:06 [http-nio-9090-exec-6] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:00:06 [http-nio-9090-exec-6] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:00:06 [http-nio-9090-exec-6] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:00:06 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@3d95441d
2025-04-19 02:00:06 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:00:06 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:00:06 [http-nio-9090-exec-6] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:00:06 [http-nio-9090-exec-6] DEBUG c.b.b.m.PostMapper.selectRecentPosts - ==>  Preparing: SELECT * FROM posts WHERE user_id = ? AND status = 'published' ORDER BY publish_at DESC LIMIT ?
2025-04-19 02:00:06 [http-nio-9090-exec-6] DEBUG c.b.b.m.PostMapper.selectRecentPosts - ==> Parameters: 1(Long), 2(Integer)
2025-04-19 02:00:06 [http-nio-9090-exec-6] DEBUG c.b.b.m.PostMapper.selectRecentPosts - <==      Total: 0
2025-04-19 02:00:06 [http-nio-9090-exec-7] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/posts/recent
2025-04-19 02:00:06 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:00:06 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:00:06 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:00:06 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:00:06 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:00:06 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:00:06 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:00:06 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@1c373c0a
2025-04-19 02:00:06 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:00:06 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:00:06 [http-nio-9090-exec-7] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:00:06 [http-nio-9090-exec-7] DEBUG c.b.b.m.PostMapper.selectRecentPosts - ==>  Preparing: SELECT * FROM posts WHERE user_id = ? AND status = 'published' ORDER BY publish_at DESC LIMIT ?
2025-04-19 02:00:06 [http-nio-9090-exec-7] DEBUG c.b.b.m.PostMapper.selectRecentPosts - ==> Parameters: 1(Long), 2(Integer)
2025-04-19 02:00:06 [http-nio-9090-exec-7] DEBUG c.b.b.m.PostMapper.selectRecentPosts - <==      Total: 0
2025-04-19 02:00:10 [http-nio-9090-exec-9] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 02:00:10 [http-nio-9090-exec-9] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:00:10 [http-nio-9090-exec-9] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:00:10 [http-nio-9090-exec-9] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:00:10 [http-nio-9090-exec-9] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:00:10 [http-nio-9090-exec-9] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:00:10 [http-nio-9090-exec-9] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:00:10 [http-nio-9090-exec-9] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:00:10 [http-nio-9090-exec-9] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@6830d801
2025-04-19 02:00:10 [http-nio-9090-exec-9] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:00:10 [http-nio-9090-exec-9] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:00:10 [http-nio-9090-exec-9] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:00:10 [http-nio-9090-exec-9] DEBUG c.b.b.m.CategoryMapper.selectList - ==>  Preparing: SELECT category_id,user_id,name,description,post_count,create_at,update_at FROM categories
2025-04-19 02:00:10 [http-nio-9090-exec-9] DEBUG c.b.b.m.CategoryMapper.selectList - ==> Parameters: 
2025-04-19 02:00:10 [http-nio-9090-exec-9] ERROR c.b.b.s.impl.CategoryServiceImpl - 获取所有分类失败: 
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'post_count' in 'field list'
### The error may exist in com/bupt/backend/mapper/CategoryMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  category_id,user_id,name,description,post_count,create_at,update_at  FROM categories
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'post_count' in 'field list'
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:93)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:347)
	at jdk.proxy2/jdk.proxy2.$Proxy75.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:194)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:164)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:149)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:90)
	at jdk.proxy2/jdk.proxy2.$Proxy109.selectList(Unknown Source)
	at com.bupt.backend.service.impl.CategoryServiceImpl.getAllCategories(CategoryServiceImpl.java:103)
	at com.bupt.backend.controller.CategoryController.getAllCategories(CategoryController.java:60)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'post_count' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:112)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:382)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy126.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:333)
	... 110 common frames omitted
2025-04-19 02:01:17 [http-nio-9090-exec-1] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/posts/recent
2025-04-19 02:01:17 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:01:17 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:01:17 [http-nio-9090-exec-1] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:01:17 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:01:17 [http-nio-9090-exec-1] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:01:17 [http-nio-9090-exec-1] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:01:17 [http-nio-9090-exec-1] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:01:17 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@67d84ce9
2025-04-19 02:01:17 [http-nio-9090-exec-1] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:01:17 [http-nio-9090-exec-1] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:01:17 [http-nio-9090-exec-1] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:01:17 [http-nio-9090-exec-1] DEBUG c.b.b.m.PostMapper.selectRecentPosts - ==>  Preparing: SELECT * FROM posts WHERE user_id = ? AND status = 'published' ORDER BY publish_at DESC LIMIT ?
2025-04-19 02:01:17 [http-nio-9090-exec-1] DEBUG c.b.b.m.PostMapper.selectRecentPosts - ==> Parameters: 1(Long), 2(Integer)
2025-04-19 02:01:17 [http-nio-9090-exec-1] DEBUG c.b.b.m.PostMapper.selectRecentPosts - <==      Total: 0
2025-04-19 02:01:18 [http-nio-9090-exec-2] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 02:01:18 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:01:18 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:01:18 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:01:18 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:01:18 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:01:18 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:01:18 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:01:18 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@2277fe1
2025-04-19 02:01:18 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:01:18 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:01:18 [http-nio-9090-exec-2] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:01:18 [http-nio-9090-exec-2] DEBUG c.b.b.m.CategoryMapper.selectList - ==>  Preparing: SELECT category_id,user_id,name,description,post_count,create_at,update_at FROM categories
2025-04-19 02:01:18 [http-nio-9090-exec-2] DEBUG c.b.b.m.CategoryMapper.selectList - ==> Parameters: 
2025-04-19 02:01:18 [http-nio-9090-exec-2] ERROR c.b.b.s.impl.CategoryServiceImpl - 获取所有分类失败: 
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'update_at' in 'field list'
### The error may exist in com/bupt/backend/mapper/CategoryMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  category_id,user_id,name,description,post_count,create_at,update_at  FROM categories
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'update_at' in 'field list'
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:93)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:347)
	at jdk.proxy2/jdk.proxy2.$Proxy75.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:194)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:164)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:149)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:90)
	at jdk.proxy2/jdk.proxy2.$Proxy109.selectList(Unknown Source)
	at com.bupt.backend.service.impl.CategoryServiceImpl.getAllCategories(CategoryServiceImpl.java:103)
	at com.bupt.backend.controller.CategoryController.getAllCategories(CategoryController.java:60)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'update_at' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:112)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:382)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy126.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:333)
	... 110 common frames omitted
2025-04-19 02:01:31 [http-nio-9090-exec-4] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts
2025-04-19 02:01:31 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:01:31 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:01:31 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:01:31 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:01:31 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:01:31 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:01:31 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:01:31 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@2a39ca56
2025-04-19 02:01:31 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:01:31 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:01:31 [http-nio-9090-exec-4] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:01:31 [http-nio-9090-exec-4] DEBUG c.b.backend.mapper.PostMapper.insert - ==>  Preparing: INSERT INTO posts ( title, content, cover_image, status, user_id, category_id, view_count, like_count, create_at, update_at ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-04-19 02:01:31 [http-nio-9090-exec-4] DEBUG c.b.backend.mapper.PostMapper.insert - ==> Parameters: (String), (String), (String), draft(String), null, null, 0(Integer), 0(Integer), 2025-04-19T02:01:31.098511(LocalDateTime), 2025-04-19T02:01:31.098526(LocalDateTime)
2025-04-19 02:01:31 [http-nio-9090-exec-4] DEBUG c.b.backend.mapper.PostMapper.insert - <==    Updates: 1
2025-04-19 02:01:32 [http-nio-9090-exec-5] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts
2025-04-19 02:01:32 [http-nio-9090-exec-5] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:01:32 [http-nio-9090-exec-5] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:01:32 [http-nio-9090-exec-5] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:01:32 [http-nio-9090-exec-5] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:01:32 [http-nio-9090-exec-5] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:01:32 [http-nio-9090-exec-5] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:01:32 [http-nio-9090-exec-5] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:01:32 [http-nio-9090-exec-5] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@6110dda0
2025-04-19 02:01:32 [http-nio-9090-exec-5] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:01:32 [http-nio-9090-exec-5] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:01:32 [http-nio-9090-exec-5] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:01:32 [http-nio-9090-exec-5] DEBUG c.b.backend.mapper.PostMapper.insert - ==>  Preparing: INSERT INTO posts ( title, content, cover_image, status, user_id, category_id, view_count, like_count, create_at, update_at ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-04-19 02:01:32 [http-nio-9090-exec-5] DEBUG c.b.backend.mapper.PostMapper.insert - ==> Parameters: (String), (String), (String), draft(String), null, null, 0(Integer), 0(Integer), 2025-04-19T02:01:32.226293(LocalDateTime), 2025-04-19T02:01:32.226298(LocalDateTime)
2025-04-19 02:01:32 [http-nio-9090-exec-5] DEBUG c.b.backend.mapper.PostMapper.insert - <==    Updates: 1
2025-04-19 02:01:32 [http-nio-9090-exec-7] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts/8/publish
2025-04-19 02:01:32 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:01:32 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:01:32 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:01:32 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:01:32 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:01:32 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:01:32 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:01:32 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@8c3d670
2025-04-19 02:01:32 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:01:32 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:01:32 [http-nio-9090-exec-7] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:01:32 [http-nio-9090-exec-7] DEBUG c.b.b.mapper.PostMapper.selectById - ==>  Preparing: SELECT post_id,user_id,category_id,title,content,cover_image,status,view_count,like_count,create_at,update_at,publish_at FROM posts WHERE post_id=?
2025-04-19 02:01:32 [http-nio-9090-exec-7] DEBUG c.b.b.mapper.PostMapper.selectById - ==> Parameters: 8(Long)
2025-04-19 02:01:32 [http-nio-9090-exec-7] DEBUG c.b.b.mapper.PostMapper.selectById - <==      Total: 1
2025-04-19 02:01:32 [http-nio-9090-exec-7] DEBUG c.b.b.mapper.PostMapper.updateById - ==>  Preparing: UPDATE posts SET title=?, content=?, cover_image=?, status=?, view_count=?, like_count=?, create_at=?, update_at=?, publish_at=? WHERE post_id=?
2025-04-19 02:01:32 [http-nio-9090-exec-7] DEBUG c.b.b.mapper.PostMapper.updateById - ==> Parameters: (String), (String), (String), published(String), 0(Integer), 0(Integer), 2025-04-19T02:01:32(LocalDateTime), 2025-04-19T02:01:32(LocalDateTime), 2025-04-19T02:01:32.252568(LocalDateTime), 8(Long)
2025-04-19 02:01:32 [http-nio-9090-exec-7] DEBUG c.b.b.mapper.PostMapper.updateById - <==    Updates: 1
2025-04-19 02:01:32 [http-nio-9090-exec-7] DEBUG c.b.b.mapper.UserMapper.selectById - ==>  Preparing: SELECT userid,username,password,email,avatar,bio,post_count,like_count,view_count,create_at,last_login FROM users WHERE userid=?
2025-04-19 02:01:32 [http-nio-9090-exec-7] DEBUG c.b.b.mapper.UserMapper.selectById - ==> Parameters: null
2025-04-19 02:01:32 [http-nio-9090-exec-7] DEBUG c.b.b.mapper.UserMapper.selectById - <==      Total: 0
2025-04-19 02:01:33 [http-nio-9090-exec-8] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/posts/recent
2025-04-19 02:01:33 [http-nio-9090-exec-8] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:01:33 [http-nio-9090-exec-8] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:01:33 [http-nio-9090-exec-8] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:01:33 [http-nio-9090-exec-8] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:01:33 [http-nio-9090-exec-8] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:01:33 [http-nio-9090-exec-8] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:01:33 [http-nio-9090-exec-8] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:01:33 [http-nio-9090-exec-8] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@35905871
2025-04-19 02:01:33 [http-nio-9090-exec-8] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:01:33 [http-nio-9090-exec-8] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:01:33 [http-nio-9090-exec-8] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:01:33 [http-nio-9090-exec-8] DEBUG c.b.b.m.PostMapper.selectRecentPosts - ==>  Preparing: SELECT * FROM posts WHERE user_id = ? AND status = 'published' ORDER BY publish_at DESC LIMIT ?
2025-04-19 02:01:33 [http-nio-9090-exec-8] DEBUG c.b.b.m.PostMapper.selectRecentPosts - ==> Parameters: 1(Long), 2(Integer)
2025-04-19 02:01:33 [http-nio-9090-exec-8] DEBUG c.b.b.m.PostMapper.selectRecentPosts - <==      Total: 0
2025-04-19 02:02:03 [http-nio-9090-exec-10] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 02:02:03 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:02:03 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:02:03 [http-nio-9090-exec-10] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:02:03 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:02:03 [http-nio-9090-exec-10] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:02:03 [http-nio-9090-exec-10] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:02:03 [http-nio-9090-exec-10] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:02:03 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@51b0da32
2025-04-19 02:02:03 [http-nio-9090-exec-10] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:02:03 [http-nio-9090-exec-10] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:02:03 [http-nio-9090-exec-10] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:02:03 [http-nio-9090-exec-10] DEBUG c.b.b.m.CategoryMapper.selectList - ==>  Preparing: SELECT category_id,user_id,name,description,post_count,create_at,update_at FROM categories
2025-04-19 02:02:03 [http-nio-9090-exec-10] DEBUG c.b.b.m.CategoryMapper.selectList - ==> Parameters: 
2025-04-19 02:02:03 [http-nio-9090-exec-10] ERROR c.b.b.s.impl.CategoryServiceImpl - 获取所有分类失败: 
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'update_at' in 'field list'
### The error may exist in com/bupt/backend/mapper/CategoryMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  category_id,user_id,name,description,post_count,create_at,update_at  FROM categories
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'update_at' in 'field list'
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:93)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:347)
	at jdk.proxy2/jdk.proxy2.$Proxy75.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:194)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:164)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:149)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:90)
	at jdk.proxy2/jdk.proxy2.$Proxy109.selectList(Unknown Source)
	at com.bupt.backend.service.impl.CategoryServiceImpl.getAllCategories(CategoryServiceImpl.java:103)
	at com.bupt.backend.controller.CategoryController.getAllCategories(CategoryController.java:60)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'update_at' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:112)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:382)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy126.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:333)
	... 110 common frames omitted
2025-04-19 02:02:12 [SpringApplicationShutdownHook] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete
2025-04-19 02:02:14 [tomcat-shutdown] INFO  o.s.b.w.e.tomcat.GracefulShutdown - Graceful shutdown complete
2025-04-19 02:02:14 [SpringApplicationShutdownHook] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Closing JPA EntityManagerFactory for persistence unit 'default'
2025-04-19 02:02:14 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown initiated...
2025-04-19 02:02:14 [SpringApplicationShutdownHook] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Shutdown completed.
2025-04-19 02:02:16 [main] INFO  com.bupt.backend.BackendApplication - Starting BackendApplication using Java 21.0.6 with PID 20124 (/Users/apple/Desktop/MyProgram/myblog/backend/target/classes started by apple in /Users/apple/Desktop/MyProgram/myblog)
2025-04-19 02:02:16 [main] DEBUG com.bupt.backend.BackendApplication - Running with Spring Boot v3.4.4, Spring v6.2.5
2025-04-19 02:02:16 [main] INFO  com.bupt.backend.BackendApplication - No active profile set, falling back to 1 default profile: "default"
2025-04-19 02:02:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2025-04-19 02:02:16 [main] INFO  o.s.d.r.c.RepositoryConfigurationDelegate - Finished Spring Data repository scanning in 6 ms. Found 0 JPA repository interfaces.
2025-04-19 02:02:17 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 9090 (http)
2025-04-19 02:02:17 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2025-04-19 02:02:17 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.39]
2025-04-19 02:02:17 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring embedded WebApplicationContext
2025-04-19 02:02:17 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 509 ms
2025-04-19 02:02:17 [main] WARN  c.b.m.core.injector.methods.Insert - [com.bupt.backend.mapper.PostMapper.insert] Has been loaded by XML or SqlProvider or Mybatis's Annotation, so ignoring this injection for [class com.baomidou.mybatisplus.core.injector.methods.Insert]
2025-04-19 02:02:17 [main] DEBUG c.b.b.config.JwtAuthenticationFilter - Filter 'jwtAuthenticationFilter' configured for use
2025-04-19 02:02:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Starting...
2025-04-19 02:02:17 [main] INFO  com.zaxxer.hikari.pool.HikariPool - HikariPool-1 - Added connection com.mysql.cj.jdbc.ConnectionImpl@221b77d7
2025-04-19 02:02:17 [main] INFO  com.zaxxer.hikari.HikariDataSource - HikariPool-1 - Start completed.
2025-04-19 02:02:17 [main] INFO  o.h.jpa.internal.util.LogHelper - HHH000204: Processing PersistenceUnitInfo [name: default]
2025-04-19 02:02:17 [main] INFO  org.hibernate.Version - HHH000412: Hibernate ORM core version 6.6.11.Final
2025-04-19 02:02:17 [main] INFO  o.h.c.i.RegionFactoryInitiator - HHH000026: Second-level cache disabled
2025-04-19 02:02:17 [main] INFO  o.s.o.j.p.SpringPersistenceUnitInfo - No LoadTimeWeaver setup: ignoring JPA class transformer
2025-04-19 02:02:17 [main] INFO  o.hibernate.orm.connections.pooling - HHH10001005: Database info:
	Database JDBC URL [Connecting through datasource 'HikariDataSource (HikariPool-1)']
	Database driver: undefined/unknown
	Database version: 9.2
	Autocommit mode: undefined/unknown
	Isolation level: undefined/unknown
	Minimum pool size: undefined/unknown
	Maximum pool size: undefined/unknown
2025-04-19 02:02:17 [main] INFO  o.h.e.t.j.p.i.JtaPlatformInitiator - HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)
2025-04-19 02:02:17 [main] INFO  o.s.o.j.LocalContainerEntityManagerFactoryBean - Initialized JPA EntityManagerFactory for persistence unit 'default'
2025-04-19 02:02:17 [main] WARN  o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2025-04-19 02:02:17 [main] INFO  o.s.s.c.a.a.c.InitializeAuthenticationProviderBeanManagerConfigurer$InitializeAuthenticationProviderManagerConfigurer - Global AuthenticationManager configured with AuthenticationProvider bean with name authenticationProvider
2025-04-19 02:02:17 [main] WARN  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with an AuthenticationProvider bean. UserDetailsService beans will not be used by Spring Security for automatically configuring username/password login. Consider removing the AuthenticationProvider bean. Alternatively, consider using the UserDetailsService in a manually instantiated DaoAuthenticationProvider. If the current configuration is intentional, to turn off this warning, increase the logging level of 'org.springframework.security.config.annotation.authentication.configuration.InitializeUserDetailsBeanManagerConfigurer' to ERROR
2025-04-19 02:02:17 [main] INFO  o.s.v.b.OptionalValidatorFactoryBean - Failed to set up a Bean Validation provider: jakarta.validation.NoProviderFoundException: Unable to create a Configuration, because no Jakarta Bean Validation provider could be found. Add a provider like Hibernate Validator (RI) to your classpath.
2025-04-19 02:02:18 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 9090 (http) with context path '/'
2025-04-19 02:02:18 [main] INFO  com.bupt.backend.BackendApplication - Started BackendApplication in 1.647 seconds (process running for 2.09)
2025-04-19 02:02:22 [http-nio-9090-exec-1] INFO  o.a.c.c.C.[Tomcat].[localhost].[/] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2025-04-19 02:02:22 [http-nio-9090-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2025-04-19 02:02:22 [http-nio-9090-exec-1] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2025-04-19 02:02:22 [http-nio-9090-exec-1] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/posts/recent
2025-04-19 02:02:22 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:02:22 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:02:22 [http-nio-9090-exec-1] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:02:22 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:02:22 [http-nio-9090-exec-1] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:02:22 [http-nio-9090-exec-1] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:02:22 [http-nio-9090-exec-1] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:02:22 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@323d0072
2025-04-19 02:02:22 [http-nio-9090-exec-1] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:02:22 [http-nio-9090-exec-1] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:02:22 [http-nio-9090-exec-1] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:02:22 [http-nio-9090-exec-1] DEBUG c.b.b.m.PostMapper.selectRecentPosts - ==>  Preparing: SELECT * FROM posts WHERE user_id = ? AND status = 'published' ORDER BY publish_at DESC LIMIT ?
2025-04-19 02:02:22 [http-nio-9090-exec-1] DEBUG c.b.b.m.PostMapper.selectRecentPosts - ==> Parameters: 1(Long), 2(Integer)
2025-04-19 02:02:22 [http-nio-9090-exec-1] DEBUG c.b.b.m.PostMapper.selectRecentPosts - <==      Total: 0
2025-04-19 02:02:22 [http-nio-9090-exec-2] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 02:02:22 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:02:22 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:02:22 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:02:22 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:02:22 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:02:22 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:02:22 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:02:22 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@359e1145
2025-04-19 02:02:22 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:02:22 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:02:22 [http-nio-9090-exec-2] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:02:22 [http-nio-9090-exec-2] DEBUG c.b.b.m.CategoryMapper.selectList - ==>  Preparing: SELECT category_id,user_id,name,description,post_count,create_at,update_at FROM categories
2025-04-19 02:02:22 [http-nio-9090-exec-2] DEBUG c.b.b.m.CategoryMapper.selectList - ==> Parameters: 
2025-04-19 02:02:23 [http-nio-9090-exec-2] ERROR c.b.b.s.impl.CategoryServiceImpl - 获取所有分类失败: 
org.springframework.jdbc.BadSqlGrammarException: 
### Error querying database.  Cause: java.sql.SQLSyntaxErrorException: Unknown column 'update_at' in 'field list'
### The error may exist in com/bupt/backend/mapper/CategoryMapper.java (best guess)
### The error may involve defaultParameterMap
### The error occurred while setting parameters
### SQL: SELECT  category_id,user_id,name,description,post_count,create_at,update_at  FROM categories
### Cause: java.sql.SQLSyntaxErrorException: Unknown column 'update_at' in 'field list'
; bad SQL grammar []
	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:246)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:107)
	at org.mybatis.spring.MyBatisExceptionTranslator.translateExceptionIfPossible(MyBatisExceptionTranslator.java:93)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:347)
	at jdk.proxy2/jdk.proxy2.$Proxy75.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:194)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.executeForMany(MybatisMapperMethod.java:164)
	at com.baomidou.mybatisplus.core.override.MybatisMapperMethod.execute(MybatisMapperMethod.java:77)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy$PlainMethodInvoker.invoke(MybatisMapperProxy.java:149)
	at com.baomidou.mybatisplus.core.override.MybatisMapperProxy.invoke(MybatisMapperProxy.java:90)
	at jdk.proxy2/jdk.proxy2.$Proxy109.selectList(Unknown Source)
	at com.bupt.backend.service.impl.CategoryServiceImpl.getAllCategories(CategoryServiceImpl.java:103)
	at com.bupt.backend.controller.CategoryController.getAllCategories(CategoryController.java:60)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:258)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:191)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:986)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:891)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:903)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:564)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)
	at jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:195)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:110)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:108)
	at org.springframework.security.web.FilterChainProxy.lambda$doFilterInternal$3(FilterChainProxy.java:231)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:365)
	at org.springframework.security.web.access.intercept.AuthorizationFilter.doFilter(AuthorizationFilter.java:101)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:126)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:120)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:131)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:85)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:100)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:179)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at com.bupt.backend.config.JwtAuthenticationFilter.doFilterInternal(JwtAuthenticationFilter.java:87)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:107)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:93)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:91)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.header.HeaderWriterFilter.doHeadersAfter(HeaderWriterFilter.java:90)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:75)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:82)
	at org.springframework.security.web.context.SecurityContextHolderFilter.doFilter(SecurityContextHolderFilter.java:69)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:62)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.session.DisableEncodeUrlFilter.doFilterInternal(DisableEncodeUrlFilter.java:42)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:374)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:233)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:191)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.servlet.handler.HandlerMappingIntrospector.lambda$createCacheFilter$3(HandlerMappingIntrospector.java:243)
	at org.springframework.web.filter.CompositeFilter$VirtualFilterChain.doFilter(CompositeFilter.java:113)
	at org.springframework.web.filter.CompositeFilter.doFilter(CompositeFilter.java:74)
	at org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$CompositeFilterChainProxy.doFilter(WebMvcSecurityConfiguration.java:238)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:362)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:278)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:164)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:140)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:483)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:397)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:905)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1743)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1190)
	at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: java.sql.SQLSyntaxErrorException: Unknown column 'update_at' in 'field list'
	at com.mysql.cj.jdbc.exceptions.SQLError.createSQLException(SQLError.java:112)
	at com.mysql.cj.jdbc.exceptions.SQLExceptionsMapping.translateException(SQLExceptionsMapping.java:114)
	at com.mysql.cj.jdbc.ClientPreparedStatement.executeInternal(ClientPreparedStatement.java:988)
	at com.mysql.cj.jdbc.ClientPreparedStatement.execute(ClientPreparedStatement.java:382)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.apache.ibatis.logging.jdbc.PreparedStatementLogger.invoke(PreparedStatementLogger.java:58)
	at jdk.proxy3/jdk.proxy3.$Proxy126.execute(Unknown Source)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:65)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:80)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:65)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:336)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:158)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:110)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:90)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:154)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:147)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:142)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:333)
	... 110 common frames omitted
2025-04-19 02:03:24 [http-nio-9090-exec-4] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 02:03:24 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:03:24 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:03:24 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:03:24 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:03:24 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:03:24 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:03:24 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:03:24 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@77a49a10
2025-04-19 02:03:24 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:03:24 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:03:24 [http-nio-9090-exec-4] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:03:24 [http-nio-9090-exec-4] DEBUG c.b.b.m.CategoryMapper.selectList - ==>  Preparing: SELECT category_id,user_id,name,description,post_count,create_at,update_at FROM categories
2025-04-19 02:03:24 [http-nio-9090-exec-4] DEBUG c.b.b.m.CategoryMapper.selectList - ==> Parameters: 
2025-04-19 02:03:24 [http-nio-9090-exec-4] DEBUG c.b.b.m.CategoryMapper.selectList - <==      Total: 0
2025-04-19 02:03:26 [http-nio-9090-exec-6] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/posts/recent
2025-04-19 02:03:26 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:03:26 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:03:26 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:03:26 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:03:26 [http-nio-9090-exec-6] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:03:26 [http-nio-9090-exec-6] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:03:26 [http-nio-9090-exec-6] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:03:26 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@7c866fa0
2025-04-19 02:03:26 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:03:26 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:03:26 [http-nio-9090-exec-6] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:03:26 [http-nio-9090-exec-6] DEBUG c.b.b.m.PostMapper.selectRecentPosts - ==>  Preparing: SELECT * FROM posts WHERE user_id = ? AND status = 'published' ORDER BY publish_at DESC LIMIT ?
2025-04-19 02:03:26 [http-nio-9090-exec-6] DEBUG c.b.b.m.PostMapper.selectRecentPosts - ==> Parameters: 1(Long), 2(Integer)
2025-04-19 02:03:26 [http-nio-9090-exec-6] DEBUG c.b.b.m.PostMapper.selectRecentPosts - <==      Total: 0
2025-04-19 02:03:26 [http-nio-9090-exec-7] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 02:03:26 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:03:26 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:03:26 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:03:26 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:03:26 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:03:26 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:03:26 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:03:26 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@10f0adda
2025-04-19 02:03:26 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:03:26 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:03:26 [http-nio-9090-exec-7] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:03:26 [http-nio-9090-exec-7] DEBUG c.b.b.m.CategoryMapper.selectList - ==>  Preparing: SELECT category_id,user_id,name,description,post_count,create_at,update_at FROM categories
2025-04-19 02:03:26 [http-nio-9090-exec-7] DEBUG c.b.b.m.CategoryMapper.selectList - ==> Parameters: 
2025-04-19 02:03:26 [http-nio-9090-exec-7] DEBUG c.b.b.m.CategoryMapper.selectList - <==      Total: 0
2025-04-19 02:03:51 [http-nio-9090-exec-9] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts
2025-04-19 02:03:51 [http-nio-9090-exec-9] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:03:51 [http-nio-9090-exec-9] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:03:51 [http-nio-9090-exec-9] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:03:51 [http-nio-9090-exec-9] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:03:51 [http-nio-9090-exec-9] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:03:51 [http-nio-9090-exec-9] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:03:51 [http-nio-9090-exec-9] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:03:51 [http-nio-9090-exec-9] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@590ae0ae
2025-04-19 02:03:51 [http-nio-9090-exec-9] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:03:51 [http-nio-9090-exec-9] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:03:51 [http-nio-9090-exec-9] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:03:51 [http-nio-9090-exec-9] DEBUG c.b.backend.mapper.PostMapper.insert - ==>  Preparing: INSERT INTO posts ( title, content, cover_image, status, user_id, category_id, view_count, like_count, create_at, update_at ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-04-19 02:03:51 [http-nio-9090-exec-9] DEBUG c.b.backend.mapper.PostMapper.insert - ==> Parameters: T1(String), 111(String), (String), draft(String), null, null, 0(Integer), 0(Integer), 2025-04-19T02:03:51.554494(LocalDateTime), 2025-04-19T02:03:51.554516(LocalDateTime)
2025-04-19 02:03:51 [http-nio-9090-exec-9] DEBUG c.b.backend.mapper.PostMapper.insert - <==    Updates: 1
2025-04-19 02:03:52 [http-nio-9090-exec-10] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts
2025-04-19 02:03:52 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:03:52 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:03:52 [http-nio-9090-exec-10] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:03:52 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:03:52 [http-nio-9090-exec-10] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:03:52 [http-nio-9090-exec-10] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:03:52 [http-nio-9090-exec-10] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:03:52 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@62cb3201
2025-04-19 02:03:52 [http-nio-9090-exec-10] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:03:52 [http-nio-9090-exec-10] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:03:52 [http-nio-9090-exec-10] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:03:52 [http-nio-9090-exec-10] DEBUG c.b.backend.mapper.PostMapper.insert - ==>  Preparing: INSERT INTO posts ( title, content, cover_image, status, user_id, category_id, view_count, like_count, create_at, update_at ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-04-19 02:03:52 [http-nio-9090-exec-10] DEBUG c.b.backend.mapper.PostMapper.insert - ==> Parameters: T1(String), 111(String), (String), draft(String), null, null, 0(Integer), 0(Integer), 2025-04-19T02:03:52.449459(LocalDateTime), 2025-04-19T02:03:52.449470(LocalDateTime)
2025-04-19 02:03:52 [http-nio-9090-exec-10] DEBUG c.b.backend.mapper.PostMapper.insert - <==    Updates: 1
2025-04-19 02:03:52 [http-nio-9090-exec-2] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts/10/publish
2025-04-19 02:03:52 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:03:52 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:03:52 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:03:52 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:03:52 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:03:52 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:03:52 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:03:52 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@70d59398
2025-04-19 02:03:52 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:03:52 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:03:52 [http-nio-9090-exec-2] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:03:52 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.PostMapper.selectById - ==>  Preparing: SELECT post_id,user_id,category_id,title,content,cover_image,status,view_count,like_count,create_at,update_at,publish_at FROM posts WHERE post_id=?
2025-04-19 02:03:52 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.PostMapper.selectById - ==> Parameters: 10(Long)
2025-04-19 02:03:52 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.PostMapper.selectById - <==      Total: 1
2025-04-19 02:03:52 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.PostMapper.updateById - ==>  Preparing: UPDATE posts SET title=?, content=?, cover_image=?, status=?, view_count=?, like_count=?, create_at=?, update_at=?, publish_at=? WHERE post_id=?
2025-04-19 02:03:52 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.PostMapper.updateById - ==> Parameters: T1(String), 111(String), (String), published(String), 0(Integer), 0(Integer), 2025-04-19T02:03:52(LocalDateTime), 2025-04-19T02:03:52(LocalDateTime), 2025-04-19T02:03:52.478848(LocalDateTime), 10(Long)
2025-04-19 02:03:52 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.PostMapper.updateById - <==    Updates: 1
2025-04-19 02:03:52 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.UserMapper.selectById - ==>  Preparing: SELECT userid,username,password,email,avatar,bio,post_count,like_count,view_count,create_at,last_login FROM users WHERE userid=?
2025-04-19 02:03:52 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.UserMapper.selectById - ==> Parameters: null
2025-04-19 02:03:52 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.UserMapper.selectById - <==      Total: 0
2025-04-19 02:04:15 [http-nio-9090-exec-4] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/posts/recent
2025-04-19 02:04:15 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:04:15 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:04:15 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:04:15 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:04:15 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:04:15 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:04:15 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:04:15 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@3c4ff2ff
2025-04-19 02:04:15 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:04:15 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:04:15 [http-nio-9090-exec-4] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:04:15 [http-nio-9090-exec-4] DEBUG c.b.b.m.PostMapper.selectRecentPosts - ==>  Preparing: SELECT * FROM posts WHERE user_id = ? AND status = 'published' ORDER BY publish_at DESC LIMIT ?
2025-04-19 02:04:15 [http-nio-9090-exec-4] DEBUG c.b.b.m.PostMapper.selectRecentPosts - ==> Parameters: 1(Long), 2(Integer)
2025-04-19 02:04:15 [http-nio-9090-exec-4] DEBUG c.b.b.m.PostMapper.selectRecentPosts - <==      Total: 0
2025-04-19 02:04:17 [http-nio-9090-exec-5] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 02:04:17 [http-nio-9090-exec-5] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:04:17 [http-nio-9090-exec-5] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:04:17 [http-nio-9090-exec-5] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:04:17 [http-nio-9090-exec-5] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:04:17 [http-nio-9090-exec-5] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:04:17 [http-nio-9090-exec-5] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:04:17 [http-nio-9090-exec-5] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:04:17 [http-nio-9090-exec-5] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@25d7bb16
2025-04-19 02:04:17 [http-nio-9090-exec-5] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:04:17 [http-nio-9090-exec-5] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:04:17 [http-nio-9090-exec-5] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:04:17 [http-nio-9090-exec-5] DEBUG c.b.b.m.CategoryMapper.selectList - ==>  Preparing: SELECT category_id,user_id,name,description,post_count,create_at,update_at FROM categories
2025-04-19 02:04:17 [http-nio-9090-exec-5] DEBUG c.b.b.m.CategoryMapper.selectList - ==> Parameters: 
2025-04-19 02:04:17 [http-nio-9090-exec-5] DEBUG c.b.b.m.CategoryMapper.selectList - <==      Total: 0
2025-04-19 02:04:18 [http-nio-9090-exec-6] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts
2025-04-19 02:04:18 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:04:18 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:04:18 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:04:18 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:04:18 [http-nio-9090-exec-6] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:04:18 [http-nio-9090-exec-6] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:04:18 [http-nio-9090-exec-6] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:04:18 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@74eb455b
2025-04-19 02:04:18 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:04:18 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:04:18 [http-nio-9090-exec-6] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:04:18 [http-nio-9090-exec-6] DEBUG c.b.backend.mapper.PostMapper.insert - ==>  Preparing: INSERT INTO posts ( title, content, cover_image, status, user_id, category_id, view_count, like_count, create_at, update_at ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-04-19 02:04:18 [http-nio-9090-exec-6] DEBUG c.b.backend.mapper.PostMapper.insert - ==> Parameters: (String), (String), (String), draft(String), null, null, 0(Integer), 0(Integer), 2025-04-19T02:04:18.762922(LocalDateTime), 2025-04-19T02:04:18.762927(LocalDateTime)
2025-04-19 02:04:18 [http-nio-9090-exec-6] DEBUG c.b.backend.mapper.PostMapper.insert - <==    Updates: 1
2025-04-19 02:04:18 [http-nio-9090-exec-8] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts/11/publish
2025-04-19 02:04:18 [http-nio-9090-exec-8] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:04:18 [http-nio-9090-exec-8] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:04:18 [http-nio-9090-exec-8] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:04:18 [http-nio-9090-exec-8] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:04:18 [http-nio-9090-exec-8] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:04:18 [http-nio-9090-exec-8] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:04:18 [http-nio-9090-exec-8] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:04:18 [http-nio-9090-exec-8] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@50c670bb
2025-04-19 02:04:18 [http-nio-9090-exec-8] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:04:18 [http-nio-9090-exec-8] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:04:18 [http-nio-9090-exec-8] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:04:18 [http-nio-9090-exec-8] DEBUG c.b.b.mapper.PostMapper.selectById - ==>  Preparing: SELECT post_id,user_id,category_id,title,content,cover_image,status,view_count,like_count,create_at,update_at,publish_at FROM posts WHERE post_id=?
2025-04-19 02:04:18 [http-nio-9090-exec-8] DEBUG c.b.b.mapper.PostMapper.selectById - ==> Parameters: 11(Long)
2025-04-19 02:04:18 [http-nio-9090-exec-8] DEBUG c.b.b.mapper.PostMapper.selectById - <==      Total: 1
2025-04-19 02:04:18 [http-nio-9090-exec-8] DEBUG c.b.b.mapper.PostMapper.updateById - ==>  Preparing: UPDATE posts SET title=?, content=?, cover_image=?, status=?, view_count=?, like_count=?, create_at=?, update_at=?, publish_at=? WHERE post_id=?
2025-04-19 02:04:18 [http-nio-9090-exec-8] DEBUG c.b.b.mapper.PostMapper.updateById - ==> Parameters: (String), (String), (String), published(String), 0(Integer), 0(Integer), 2025-04-19T02:04:19(LocalDateTime), 2025-04-19T02:04:19(LocalDateTime), 2025-04-19T02:04:18.783472(LocalDateTime), 11(Long)
2025-04-19 02:04:18 [http-nio-9090-exec-8] DEBUG c.b.b.mapper.PostMapper.updateById - <==    Updates: 1
2025-04-19 02:04:18 [http-nio-9090-exec-8] DEBUG c.b.b.mapper.UserMapper.selectById - ==>  Preparing: SELECT userid,username,password,email,avatar,bio,post_count,like_count,view_count,create_at,last_login FROM users WHERE userid=?
2025-04-19 02:04:18 [http-nio-9090-exec-8] DEBUG c.b.b.mapper.UserMapper.selectById - ==> Parameters: null
2025-04-19 02:04:18 [http-nio-9090-exec-8] DEBUG c.b.b.mapper.UserMapper.selectById - <==      Total: 0
2025-04-19 02:04:21 [http-nio-9090-exec-10] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/posts/recent
2025-04-19 02:04:21 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:04:21 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:04:21 [http-nio-9090-exec-10] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:04:22 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:04:22 [http-nio-9090-exec-10] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:04:22 [http-nio-9090-exec-10] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:04:22 [http-nio-9090-exec-10] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:04:22 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@31903e8d
2025-04-19 02:04:22 [http-nio-9090-exec-10] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:04:22 [http-nio-9090-exec-10] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:04:22 [http-nio-9090-exec-10] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:04:22 [http-nio-9090-exec-10] DEBUG c.b.b.m.PostMapper.selectRecentPosts - ==>  Preparing: SELECT * FROM posts WHERE user_id = ? AND status = 'published' ORDER BY publish_at DESC LIMIT ?
2025-04-19 02:04:22 [http-nio-9090-exec-10] DEBUG c.b.b.m.PostMapper.selectRecentPosts - ==> Parameters: 1(Long), 2(Integer)
2025-04-19 02:04:22 [http-nio-9090-exec-10] DEBUG c.b.b.m.PostMapper.selectRecentPosts - <==      Total: 0
2025-04-19 02:04:30 [http-nio-9090-exec-2] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 02:04:30 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:04:30 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:04:30 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:04:30 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:04:30 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:04:30 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:04:30 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:04:30 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@146eb0f
2025-04-19 02:04:30 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:04:30 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:04:30 [http-nio-9090-exec-2] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:04:30 [http-nio-9090-exec-2] DEBUG c.b.b.m.CategoryMapper.selectList - ==>  Preparing: SELECT category_id,user_id,name,description,post_count,create_at,update_at FROM categories
2025-04-19 02:04:30 [http-nio-9090-exec-2] DEBUG c.b.b.m.CategoryMapper.selectList - ==> Parameters: 
2025-04-19 02:04:30 [http-nio-9090-exec-2] DEBUG c.b.b.m.CategoryMapper.selectList - <==      Total: 0
2025-04-19 02:04:31 [http-nio-9090-exec-3] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts
2025-04-19 02:04:31 [http-nio-9090-exec-3] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:04:31 [http-nio-9090-exec-3] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:04:31 [http-nio-9090-exec-3] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:04:31 [http-nio-9090-exec-3] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:04:31 [http-nio-9090-exec-3] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:04:31 [http-nio-9090-exec-3] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:04:31 [http-nio-9090-exec-3] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:04:31 [http-nio-9090-exec-3] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@78e0b5e3
2025-04-19 02:04:31 [http-nio-9090-exec-3] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:04:31 [http-nio-9090-exec-3] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:04:31 [http-nio-9090-exec-3] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:04:31 [http-nio-9090-exec-3] DEBUG c.b.backend.mapper.PostMapper.insert - ==>  Preparing: INSERT INTO posts ( title, content, cover_image, status, user_id, category_id, view_count, like_count, create_at, update_at ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-04-19 02:04:31 [http-nio-9090-exec-3] DEBUG c.b.backend.mapper.PostMapper.insert - ==> Parameters: (String), (String), (String), draft(String), null, null, 0(Integer), 0(Integer), 2025-04-19T02:04:31.504135(LocalDateTime), 2025-04-19T02:04:31.504139(LocalDateTime)
2025-04-19 02:04:31 [http-nio-9090-exec-3] DEBUG c.b.backend.mapper.PostMapper.insert - <==    Updates: 1
2025-04-19 02:04:31 [http-nio-9090-exec-5] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts/12/publish
2025-04-19 02:04:31 [http-nio-9090-exec-5] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:04:31 [http-nio-9090-exec-5] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:04:31 [http-nio-9090-exec-5] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:04:31 [http-nio-9090-exec-5] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:04:31 [http-nio-9090-exec-5] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:04:31 [http-nio-9090-exec-5] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:04:31 [http-nio-9090-exec-5] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:04:31 [http-nio-9090-exec-5] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@1816cc65
2025-04-19 02:04:31 [http-nio-9090-exec-5] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:04:31 [http-nio-9090-exec-5] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:04:31 [http-nio-9090-exec-5] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:04:31 [http-nio-9090-exec-5] DEBUG c.b.b.mapper.PostMapper.selectById - ==>  Preparing: SELECT post_id,user_id,category_id,title,content,cover_image,status,view_count,like_count,create_at,update_at,publish_at FROM posts WHERE post_id=?
2025-04-19 02:04:31 [http-nio-9090-exec-5] DEBUG c.b.b.mapper.PostMapper.selectById - ==> Parameters: 12(Long)
2025-04-19 02:04:31 [http-nio-9090-exec-5] DEBUG c.b.b.mapper.PostMapper.selectById - <==      Total: 1
2025-04-19 02:04:31 [http-nio-9090-exec-5] DEBUG c.b.b.mapper.PostMapper.updateById - ==>  Preparing: UPDATE posts SET title=?, content=?, cover_image=?, status=?, view_count=?, like_count=?, create_at=?, update_at=?, publish_at=? WHERE post_id=?
2025-04-19 02:04:31 [http-nio-9090-exec-5] DEBUG c.b.b.mapper.PostMapper.updateById - ==> Parameters: (String), (String), (String), published(String), 0(Integer), 0(Integer), 2025-04-19T02:04:32(LocalDateTime), 2025-04-19T02:04:32(LocalDateTime), 2025-04-19T02:04:31.537047(LocalDateTime), 12(Long)
2025-04-19 02:04:31 [http-nio-9090-exec-5] DEBUG c.b.b.mapper.PostMapper.updateById - <==    Updates: 1
2025-04-19 02:04:31 [http-nio-9090-exec-5] DEBUG c.b.b.mapper.UserMapper.selectById - ==>  Preparing: SELECT userid,username,password,email,avatar,bio,post_count,like_count,view_count,create_at,last_login FROM users WHERE userid=?
2025-04-19 02:04:31 [http-nio-9090-exec-5] DEBUG c.b.b.mapper.UserMapper.selectById - ==> Parameters: null
2025-04-19 02:04:31 [http-nio-9090-exec-5] DEBUG c.b.b.mapper.UserMapper.selectById - <==      Total: 0
2025-04-19 02:04:44 [http-nio-9090-exec-7] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/posts/recent
2025-04-19 02:04:44 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:04:44 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:04:44 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:04:44 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:04:44 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:04:44 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:04:44 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:04:44 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@439eddaa
2025-04-19 02:04:44 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:04:44 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:04:44 [http-nio-9090-exec-7] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:04:44 [http-nio-9090-exec-7] DEBUG c.b.b.m.PostMapper.selectRecentPosts - ==>  Preparing: SELECT * FROM posts WHERE user_id = ? AND status = 'published' ORDER BY publish_at DESC LIMIT ?
2025-04-19 02:04:44 [http-nio-9090-exec-7] DEBUG c.b.b.m.PostMapper.selectRecentPosts - ==> Parameters: 1(Long), 2(Integer)
2025-04-19 02:04:44 [http-nio-9090-exec-7] DEBUG c.b.b.m.PostMapper.selectRecentPosts - <==      Total: 0
2025-04-19 02:04:46 [http-nio-9090-exec-9] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 02:04:46 [http-nio-9090-exec-9] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:04:46 [http-nio-9090-exec-9] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:04:46 [http-nio-9090-exec-9] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:04:46 [http-nio-9090-exec-9] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:04:46 [http-nio-9090-exec-9] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:04:46 [http-nio-9090-exec-9] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:04:46 [http-nio-9090-exec-9] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:04:46 [http-nio-9090-exec-9] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@3a0d5e5a
2025-04-19 02:04:46 [http-nio-9090-exec-9] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:04:46 [http-nio-9090-exec-9] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:04:46 [http-nio-9090-exec-9] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:04:46 [http-nio-9090-exec-9] DEBUG c.b.b.m.CategoryMapper.selectList - ==>  Preparing: SELECT category_id,user_id,name,description,post_count,create_at,update_at FROM categories
2025-04-19 02:04:46 [http-nio-9090-exec-9] DEBUG c.b.b.m.CategoryMapper.selectList - ==> Parameters: 
2025-04-19 02:04:46 [http-nio-9090-exec-9] DEBUG c.b.b.m.CategoryMapper.selectList - <==      Total: 0
2025-04-19 02:04:47 [http-nio-9090-exec-10] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts
2025-04-19 02:04:47 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:04:47 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:04:47 [http-nio-9090-exec-10] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:04:47 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:04:47 [http-nio-9090-exec-10] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:04:47 [http-nio-9090-exec-10] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:04:47 [http-nio-9090-exec-10] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:04:47 [http-nio-9090-exec-10] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@8dc01d0
2025-04-19 02:04:47 [http-nio-9090-exec-10] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:04:47 [http-nio-9090-exec-10] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:04:47 [http-nio-9090-exec-10] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:04:47 [http-nio-9090-exec-10] DEBUG c.b.backend.mapper.PostMapper.insert - ==>  Preparing: INSERT INTO posts ( title, content, cover_image, status, user_id, category_id, view_count, like_count, create_at, update_at ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-04-19 02:04:47 [http-nio-9090-exec-10] DEBUG c.b.backend.mapper.PostMapper.insert - ==> Parameters: (String), (String), (String), draft(String), null, null, 0(Integer), 0(Integer), 2025-04-19T02:04:47.949668(LocalDateTime), 2025-04-19T02:04:47.949682(LocalDateTime)
2025-04-19 02:04:47 [http-nio-9090-exec-10] DEBUG c.b.backend.mapper.PostMapper.insert - <==    Updates: 1
2025-04-19 02:04:47 [http-nio-9090-exec-2] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts/13/publish
2025-04-19 02:04:47 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:04:47 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:04:47 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:04:47 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:04:47 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:04:47 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:04:47 [http-nio-9090-exec-2] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:04:47 [http-nio-9090-exec-2] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@5108a54c
2025-04-19 02:04:47 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:04:47 [http-nio-9090-exec-2] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:04:47 [http-nio-9090-exec-2] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:04:47 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.PostMapper.selectById - ==>  Preparing: SELECT post_id,user_id,category_id,title,content,cover_image,status,view_count,like_count,create_at,update_at,publish_at FROM posts WHERE post_id=?
2025-04-19 02:04:47 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.PostMapper.selectById - ==> Parameters: 13(Long)
2025-04-19 02:04:47 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.PostMapper.selectById - <==      Total: 1
2025-04-19 02:04:47 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.PostMapper.updateById - ==>  Preparing: UPDATE posts SET title=?, content=?, cover_image=?, status=?, view_count=?, like_count=?, create_at=?, update_at=?, publish_at=? WHERE post_id=?
2025-04-19 02:04:47 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.PostMapper.updateById - ==> Parameters: (String), (String), (String), published(String), 0(Integer), 0(Integer), 2025-04-19T02:04:48(LocalDateTime), 2025-04-19T02:04:48(LocalDateTime), 2025-04-19T02:04:47.994646(LocalDateTime), 13(Long)
2025-04-19 02:04:47 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.PostMapper.updateById - <==    Updates: 1
2025-04-19 02:04:47 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.UserMapper.selectById - ==>  Preparing: SELECT userid,username,password,email,avatar,bio,post_count,like_count,view_count,create_at,last_login FROM users WHERE userid=?
2025-04-19 02:04:47 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.UserMapper.selectById - ==> Parameters: null
2025-04-19 02:04:47 [http-nio-9090-exec-2] DEBUG c.b.b.mapper.UserMapper.selectById - <==      Total: 0
2025-04-19 02:07:59 [http-nio-9090-exec-4] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/posts/recent
2025-04-19 02:07:59 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:07:59 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:07:59 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:07:59 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:07:59 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:07:59 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:07:59 [http-nio-9090-exec-4] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:07:59 [http-nio-9090-exec-4] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@a3bf1f0
2025-04-19 02:07:59 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:07:59 [http-nio-9090-exec-4] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:07:59 [http-nio-9090-exec-4] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:07:59 [http-nio-9090-exec-4] DEBUG c.b.b.m.PostMapper.selectRecentPosts - ==>  Preparing: SELECT * FROM posts WHERE user_id = ? AND status = 'published' ORDER BY publish_at DESC LIMIT ?
2025-04-19 02:07:59 [http-nio-9090-exec-4] DEBUG c.b.b.m.PostMapper.selectRecentPosts - ==> Parameters: 1(Long), 2(Integer)
2025-04-19 02:07:59 [http-nio-9090-exec-4] DEBUG c.b.b.m.PostMapper.selectRecentPosts - <==      Total: 0
2025-04-19 02:08:02 [http-nio-9090-exec-6] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/categories/all
2025-04-19 02:08:02 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:08:02 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:08:02 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:08:02 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:08:02 [http-nio-9090-exec-6] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:08:02 [http-nio-9090-exec-6] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:08:02 [http-nio-9090-exec-6] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:08:02 [http-nio-9090-exec-6] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@3ce11366
2025-04-19 02:08:02 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:08:02 [http-nio-9090-exec-6] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:08:02 [http-nio-9090-exec-6] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:08:02 [http-nio-9090-exec-6] DEBUG c.b.b.m.CategoryMapper.selectList - ==>  Preparing: SELECT category_id,user_id,name,description,post_count,create_at,update_at FROM categories
2025-04-19 02:08:02 [http-nio-9090-exec-6] DEBUG c.b.b.m.CategoryMapper.selectList - ==> Parameters: 
2025-04-19 02:08:02 [http-nio-9090-exec-6] DEBUG c.b.b.m.CategoryMapper.selectList - <==      Total: 0
2025-04-19 02:08:04 [http-nio-9090-exec-7] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts
2025-04-19 02:08:04 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:08:04 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:08:04 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:08:04 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:08:04 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:08:04 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:08:04 [http-nio-9090-exec-7] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:08:04 [http-nio-9090-exec-7] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@35e38114
2025-04-19 02:08:04 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:08:04 [http-nio-9090-exec-7] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:08:04 [http-nio-9090-exec-7] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:08:04 [http-nio-9090-exec-7] DEBUG c.b.backend.mapper.PostMapper.insert - ==>  Preparing: INSERT INTO posts ( title, content, cover_image, status, user_id, category_id, view_count, like_count, create_at, update_at ) VALUES ( ?, ?, ?, ?, ?, ?, ?, ?, ?, ? )
2025-04-19 02:08:04 [http-nio-9090-exec-7] DEBUG c.b.backend.mapper.PostMapper.insert - ==> Parameters: (String), (String), (String), draft(String), null, null, 0(Integer), 0(Integer), 2025-04-19T02:08:04.983436(LocalDateTime), 2025-04-19T02:08:04.983452(LocalDateTime)
2025-04-19 02:08:05 [http-nio-9090-exec-7] DEBUG c.b.backend.mapper.PostMapper.insert - <==    Updates: 1
2025-04-19 02:08:05 [http-nio-9090-exec-9] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: POST /api/posts/14/publish
2025-04-19 02:08:05 [http-nio-9090-exec-9] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:08:05 [http-nio-9090-exec-9] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:08:05 [http-nio-9090-exec-9] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:08:05 [http-nio-9090-exec-9] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:08:05 [http-nio-9090-exec-9] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:08:05 [http-nio-9090-exec-9] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:08:05 [http-nio-9090-exec-9] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:08:05 [http-nio-9090-exec-9] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@2afa5726
2025-04-19 02:08:05 [http-nio-9090-exec-9] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:08:05 [http-nio-9090-exec-9] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:08:05 [http-nio-9090-exec-9] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:08:05 [http-nio-9090-exec-9] DEBUG c.b.b.mapper.PostMapper.selectById - ==>  Preparing: SELECT post_id,user_id,category_id,title,content,cover_image,status,view_count,like_count,create_at,update_at,publish_at FROM posts WHERE post_id=?
2025-04-19 02:08:05 [http-nio-9090-exec-9] DEBUG c.b.b.mapper.PostMapper.selectById - ==> Parameters: 14(Long)
2025-04-19 02:08:05 [http-nio-9090-exec-9] DEBUG c.b.b.mapper.PostMapper.selectById - <==      Total: 1
2025-04-19 02:08:05 [http-nio-9090-exec-9] DEBUG c.b.b.mapper.PostMapper.updateById - ==>  Preparing: UPDATE posts SET title=?, content=?, cover_image=?, status=?, view_count=?, like_count=?, create_at=?, update_at=?, publish_at=? WHERE post_id=?
2025-04-19 02:08:05 [http-nio-9090-exec-9] DEBUG c.b.b.mapper.PostMapper.updateById - ==> Parameters: (String), (String), (String), published(String), 0(Integer), 0(Integer), 2025-04-19T02:08:05(LocalDateTime), 2025-04-19T02:08:05(LocalDateTime), 2025-04-19T02:08:05.044238(LocalDateTime), 14(Long)
2025-04-19 02:08:05 [http-nio-9090-exec-9] DEBUG c.b.b.mapper.PostMapper.updateById - <==    Updates: 1
2025-04-19 02:08:05 [http-nio-9090-exec-9] DEBUG c.b.b.mapper.UserMapper.selectById - ==>  Preparing: SELECT userid,username,password,email,avatar,bio,post_count,like_count,view_count,create_at,last_login FROM users WHERE userid=?
2025-04-19 02:08:05 [http-nio-9090-exec-9] DEBUG c.b.b.mapper.UserMapper.selectById - ==> Parameters: null
2025-04-19 02:08:05 [http-nio-9090-exec-9] DEBUG c.b.b.mapper.UserMapper.selectById - <==      Total: 0
2025-04-19 02:08:06 [http-nio-9090-exec-1] INFO  c.b.b.config.JwtAuthenticationFilter - 处理请求: GET /api/posts/recent
2025-04-19 02:08:06 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - Authorization header: Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:08:06 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - JWT token: eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJkZW1vIiwiaWF0IjoxNzQ0OTk3MTUzLCJleHAiOjE3NDUwODM1NTN9.mF3ov7HMXhGwlS4EcSPFy9oo0yhQCa7BMb5COdIF0Ls
2025-04-19 02:08:06 [http-nio-9090-exec-1] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:08:06 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - 从 JWT 中提取的用户名: demo
2025-04-19 02:08:06 [http-nio-9090-exec-1] DEBUG c.b.b.m.UserMapper.findByUsername - ==>  Preparing: SELECT * FROM users WHERE username = ?
2025-04-19 02:08:06 [http-nio-9090-exec-1] DEBUG c.b.b.m.UserMapper.findByUsername - ==> Parameters: demo(String)
2025-04-19 02:08:06 [http-nio-9090-exec-1] DEBUG c.b.b.m.UserMapper.findByUsername - <==      Total: 1
2025-04-19 02:08:06 [http-nio-9090-exec-1] DEBUG c.b.b.config.JwtAuthenticationFilter - 加载的用户详情: com.bupt.backend.service.UserDetailsServiceImpl$CustomUserDetails@6fb82c2e
2025-04-19 02:08:06 [http-nio-9090-exec-1] DEBUG com.bupt.backend.service.JwtService - 从 token 中提取用户名
2025-04-19 02:08:06 [http-nio-9090-exec-1] DEBUG com.bupt.backend.service.JwtService - 验证 token 有效性: username=demo, isValid=true
2025-04-19 02:08:06 [http-nio-9090-exec-1] INFO  c.b.b.config.JwtAuthenticationFilter - 用户 demo 认证成功
2025-04-19 02:08:06 [http-nio-9090-exec-1] DEBUG c.b.b.m.PostMapper.selectRecentPosts - ==>  Preparing: SELECT * FROM posts WHERE user_id = ? AND status = 'published' ORDER BY publish_at DESC LIMIT ?
2025-04-19 02:08:06 [http-nio-9090-exec-1] DEBUG c.b.b.m.PostMapper.selectRecentPosts - ==> Parameters: 1(Long), 2(Integer)
2025-04-19 02:08:06 [http-nio-9090-exec-1] DEBUG c.b.b.m.PostMapper.selectRecentPosts - <==      Total: 0
